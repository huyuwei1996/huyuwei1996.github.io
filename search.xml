<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BurpSuite下载安装</title>
    <url>/posts/58165/</url>
    <content><![CDATA[<p>官网下载地址：<a href="https://portswigger.net/burp/releases">https://portswigger.net/burp/releases</a></p>
<p>破解方法相关：<a href="https://www.52pojie.cn/thread-1038295-1-1.html">https://www.52pojie.cn/thread-1038295-1-1.html</a></p>
<p>参考以上:<br><a href="https://github.com/TrojanAZhen/BurpSuitePro-2.1">https://github.com/TrojanAZhen/BurpSuitePro-2.1</a></p>
<p><a href="https://www.fahai.org/index.php/archives/101/">https://www.fahai.org/index.php/archives/101/</a></p>
<span id="more"></span>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">
<span class="token function">wget</span> <span class="token parameter variable">-N</span> <span class="token parameter variable">-c</span> https://portswigger.net/burp/releases/download<span class="token punctuation">\</span>?product<span class="token punctuation">\</span><span class="token operator">=</span>pro<span class="token punctuation">\</span><span class="token operator">&amp;</span>version<span class="token punctuation">\</span><span class="token operator">=</span><span class="token number">2021.9</span>.1<span class="token punctuation">\</span><span class="token operator">&amp;</span>type<span class="token punctuation">\</span><span class="token operator">=</span>MacOsx

<span class="token comment"># rename burpsuite_pro_macos_v2021_9_1.dmg</span>
<span class="token comment"># 然后安装</span>

<span class="token function">wget</span> <span class="token parameter variable">-N</span> <span class="token parameter variable">-c</span> https://github.com/TrojanAZhen/BurpSuitePro-2.1/blob/master/burp-keygen-scz.jar

<span class="token comment"># Java9-Java14</span>
/opt/homebrew/opt/openjdk@11/bin/java <span class="token parameter variable">-jar</span> burp-keygen-scz.jar


/opt/homebrew/opt/openjdk@11/bin/java <span class="token parameter variable">-Dfile.encoding</span><span class="token operator">=</span>utf-8 <span class="token parameter variable">-noverify</span> <span class="token parameter variable">-javaagent:Burploader2021_x.jar</span> <span class="token parameter variable">-Xmx2048m</span> <span class="token parameter variable">-jar</span> burpsuite_pro.jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>测试</category>
        <category>渗透测试工具</category>
      </categories>
      <tags>
        <tag>BurpSuite</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker搭建与使用</title>
    <url>/posts/350/</url>
    <content><![CDATA[<p>官方文档</p>
<p><a href="https://docs.docker.com/get-started/">https://docs.docker.com/get-started/</a></p>
<p>官方镜像仓库</p>
<p><a href="https://registry.hub.docker.com/">https://registry.hub.docker.com/</a></p>
<span id="more"></span>

]]></content>
      <categories>
        <category>测试</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>ChromeOptions和Selenium Grid部署</title>
    <url>/posts/29703/</url>
    <content><![CDATA[<h2 id="Options-or-Capabilities"><a href="#Options-or-Capabilities" class="headerlink" title="Options or Capabilities"></a>Options or Capabilities</h2><h3 id="Chrome-Options："><a href="#Chrome-Options：" class="headerlink" title="Chrome Options："></a>Chrome Options：</h3><p><a href="https://sites.google.com/a/chromium.org/chromedriver/capabilities">https://sites.google.com/a/chromium.org/chromedriver/capabilities</a></p>
<p><a href="https://peter.sh/experiments/chromium-command-line-switches/">https://peter.sh/experiments/chromium-command-line-switches/</a></p>
<span id="more"></span>

<h3 id="Firefox-Options："><a href="#Firefox-Options：" class="headerlink" title="Firefox Options："></a>Firefox Options：</h3><p><a href="https://developer.mozilla.org/en-US/docs/Web/WebDriver/Capabilities/firefoxOptions">https://developer.mozilla.org/en-US/docs/Web/WebDriver/Capabilities/firefoxOptions</a></p>
<h2 id="docker-k8s部署"><a href="#docker-k8s部署" class="headerlink" title="docker/k8s部署"></a>docker/k8s部署</h2><h3 id="k8s部署参考"><a href="#k8s部署参考" class="headerlink" title="k8s部署参考"></a>k8s部署参考</h3><p><a href="https://github.com/kubernetes/examples/tree/master/staging/selenium">https://github.com/kubernetes/examples/tree/master/staging/selenium</a></p>
<h3 id="镜像环境变量参考"><a href="#镜像环境变量参考" class="headerlink" title="镜像环境变量参考"></a>镜像环境变量参考</h3><p><a href="https://github.com/SeleniumHQ/docker-selenium">https://github.com/SeleniumHQ/docker-selenium</a></p>
]]></content>
      <categories>
        <category>测试</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>Selenium Grid</tag>
      </tags>
  </entry>
  <entry>
    <title>Clash代理</title>
    <url>/posts/20254/</url>
    <content><![CDATA[<h2 id="延时测试网址"><a href="#延时测试网址" class="headerlink" title="延时测试网址"></a>延时测试网址</h2><blockquote>
<p><a href="http://www.gstatic.com/generate_204">http://www.gstatic.com/generate_204</a></p>
<p><a href="http://cp.cloudflare.com/generate_204">http://cp.cloudflare.com/generate_204</a></p>
</blockquote>
<span id="more"></span>
]]></content>
      <categories>
        <category>软件配置</category>
      </categories>
      <tags>
        <tag>clash</tag>
      </tags>
  </entry>
  <entry>
    <title>HomeAssistant安装使用</title>
    <url>/posts/8498/</url>
    <content><![CDATA[<h2 id="一、Home-Assistant安装"><a href="#一、Home-Assistant安装" class="headerlink" title="一、Home Assistant安装"></a>一、Home Assistant安装</h2><p>官方文档：<a href="https://www.home-assistant.io/installation/raspberrypi">https://www.home-assistant.io/installation/raspberrypi</a></p>
<span id="more"></span>

<pre class="line-numbers language-none"><code class="language-none">sudo vim &#x2F;etc&#x2F;docker&#x2F;daemon.json
  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;docker.mirrors.ustc.edu.cn&#x2F;&quot;]
  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;]
sudo systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">homeassistant</span><span class="token punctuation">:</span>
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> homeassistant
    <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">"ghcr.io/home-assistant/raspberrypi3-homeassistant:stable"</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /etc/config<span class="token punctuation">:</span>/config
      <span class="token punctuation">-</span> /etc/localtime<span class="token punctuation">:</span>/etc/localtime<span class="token punctuation">:</span>ro
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped
    <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> host
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> GITHUB_TOKEN=<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="supervised"><a href="#supervised" class="headerlink" title="supervised"></a>supervised</h3><p><a href="https://github.com/home-assistant/supervised-installer">https://github.com/home-assistant/supervised-installer</a></p>
<pre class="line-numbers language-none"><code class="language-none">bash installer.sh --machine raspberrypi3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="二、安装插件商店HACS"><a href="#二、安装插件商店HACS" class="headerlink" title="二、安装插件商店HACS"></a>二、安装插件商店HACS</h2><p>官方文档：<a href="https://hacs.xyz/docs/installation/installation">https://hacs.xyz/docs/installation/installation</a></p>
<p>运行完安装命令后，添加集成，HACS</p>
<h3 id="GitHub-Ratelimit-error问题解决方法"><a href="#GitHub-Ratelimit-error问题解决方法" class="headerlink" title="GitHub Ratelimit error问题解决方法"></a>GitHub Ratelimit error问题解决方法</h3><p>github的Settings/Developer settings/Personal access tokens，创建一个token，然后设置到环境变量中</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># linux</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">GITHUB_TOKEN</span><span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="安装主题：iOS-Themes-Dark-Mode-and-Light-Mode"><a href="#安装主题：iOS-Themes-Dark-Mode-and-Light-Mode" class="headerlink" title="安装主题：iOS Themes - Dark Mode and Light Mode"></a>安装主题：iOS Themes - Dark Mode and Light Mode</h3><p>安装完成之后，你需要到configuration.yaml里添加一行代码</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">frontend:  
  themes: <span class="token operator">!</span>include_dir_merge_named themes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>再重启home assistant一次，之后你可以点击左下角的头像进行主题更换</p>
<h2 id="三、添加集成"><a href="#三、添加集成" class="headerlink" title="三、添加集成"></a>三、添加集成</h2><p><a href="https://www.home-assistant.io/integrations/">https://www.home-assistant.io/integrations/</a></p>
<h3 id="1-xiaomi-miio"><a href="#1-xiaomi-miio" class="headerlink" title="1. xiaomi_miio"></a>1. xiaomi_miio</h3><h4 id="小米设备token获取"><a href="#小米设备token获取" class="headerlink" title="小米设备token获取"></a>小米设备token获取</h4><p><a href="https://github.com/PiotrMachowski/Xiaomi-cloud-tokens-extractor">https://github.com/PiotrMachowski/Xiaomi-cloud-tokens-extractor</a></p>
<blockquote>
<p><strong>Xiaomi Miio</strong></p>
<p>zhimi.airpurifier.ma2</p>
<p>zimi.powerstrip.v2</p>
</blockquote>
<h3 id="2-小米空调伴侣"><a href="#2-小米空调伴侣" class="headerlink" title="2. 小米空调伴侣"></a>2. 小米空调伴侣</h3><blockquote>
<p>需要手动添加仓库</p>
<p><a href="https://github.com/EugeneLiu/xiaomi_airconditioningcompanionMCN02">https://github.com/EugeneLiu/xiaomi_airconditioningcompanionMCN02</a></p>
<p>直接hacs下载</p>
</blockquote>
<h2 id="四、主题"><a href="#四、主题" class="headerlink" title="四、主题"></a>四、主题</h2><p><a href="https://github.com/jimz011/homekit-infused/tree/4.x.x-docs">https://github.com/jimz011/homekit-infused/tree/4.x.x-docs</a></p>
<p><a href="https://github.com/jimz011/homekit-infused/tree/4.x.x-personal">https://github.com/jimz011/homekit-infused/tree/4.x.x-personal</a></p>
<blockquote>
<p>直接hacs下载loveplace：</p>
<h3 id="Simple-Thermostat"><a href="#Simple-Thermostat" class="headerlink" title="Simple Thermostat"></a>Simple Thermostat</h3><h3 id="Air-Purifier-Card"><a href="#Air-Purifier-Card" class="headerlink" title="Air Purifier Card"></a>Air Purifier Card</h3></blockquote>
<h3 id="mini-graph-card"><a href="#mini-graph-card" class="headerlink" title="mini-graph-card"></a>mini-graph-card</h3><p>小的线段图</p>
<blockquote>
<p>UI配置参考</p>
<p>图标，来自 <a href="https://materialdesignicons.com/">https://materialdesignicons.com/</a></p>
<p>自定义实体，分组，<a href="https://sspai.com/post/40272">https://sspai.com/post/40272</a></p>
</blockquote>
<p>设置地理位置</p>
<p><a href="https://www.openhistoricalmap.org/">https://www.openhistoricalmap.org/</a></p>
<p><a href="https://github.com/home-assistant/supervised-installer">https://github.com/home-assistant/supervised-installer</a></p>
<p><a href="https://github.com/home-assistant/supervisor">https://github.com/home-assistant/supervisor</a></p>
<h1 id="FRP服务器搭建"><a href="#FRP服务器搭建" class="headerlink" title="FRP服务器搭建"></a>FRP服务器搭建</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># install</span>
<span class="token function">wget</span> --no-check-certificate https://raw.githubusercontent.com/clangcn/onekey-install-shell/master/frps/install-frps.sh <span class="token parameter variable">-O</span> ./install-frps.sh
<span class="token function">chmod</span> <span class="token number">700</span> ./install-frps.sh
./install-frps.sh <span class="token function">install</span>

<span class="token comment"># update</span>
<span class="token function">wget</span> --no-check-certificate https://raw.githubusercontent.com/clangcn/onekey-install-shell/master/frps/install-frps.sh <span class="token parameter variable">-O</span> ./install-frps.sh
<span class="token function">bash</span> install-frps.sh update
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h1 id="局域网建立-local域名"><a href="#局域网建立-local域名" class="headerlink" title="局域网建立.local域名"></a>局域网建立.local域名</h1><p><a href="https://notes.leconiot.com/mdns.html">https://notes.leconiot.com/mdns.html</a></p>
]]></content>
      <categories>
        <category>软件配置</category>
      </categories>
      <tags>
        <tag>HomeAssistant</tag>
      </tags>
  </entry>
  <entry>
    <title>Granafa搭建与使用</title>
    <url>/posts/54182/</url>
    <content><![CDATA[<p>官方文档</p>
<p><a href="https://grafana.com/docs/grafana/latest/getting-started/">https://grafana.com/docs/grafana/latest/getting-started/</a></p>
<p>Dashboard下载</p>
<p><a href="https://grafana.com/grafana/dashboards/">https://grafana.com/grafana/dashboards/</a></p>
<span id="more"></span>]]></content>
      <categories>
        <category>测试</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>InfluxDB搭建与使用</title>
    <url>/posts/57952/</url>
    <content><![CDATA[<p>官方文档</p>
<p><a href="https://docs.influxdata.com/influxdb/v2.0/get-started/">https://docs.influxdata.com/influxdb/v2.0/get-started/</a></p>
<p>非官方编写的中文文档</p>
<p><a href="https://jasper-zhang1.gitbooks.io/influxdb/content/Introduction/getting_start.html">https://jasper-zhang1.gitbooks.io/influxdb/content/Introduction/getting_start.html</a></p>
<span id="more"></span>

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="k8s-helm"><a href="#k8s-helm" class="headerlink" title="k8s helm"></a>k8s helm</h3><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx">helm install influxdb bitnami<span class="token operator">/</span>influxdb <span class="token operator">--</span><span class="token keyword">set</span> service<span class="token punctuation">.</span>type<span class="token operator">=</span>NodePort <span class="token operator">--</span><span class="token keyword">set</span> persistence<span class="token punctuation">.</span>enabled<span class="token operator">=</span><span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">influx <span class="token parameter variable">-precision</span> rfc3339<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



]]></content>
      <categories>
        <category>测试</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>influxdb</tag>
      </tags>
  </entry>
  <entry>
    <title>JMeter学习使用</title>
    <url>/posts/37926/</url>
    <content><![CDATA[<h2 id="各版本对比"><a href="#各版本对比" class="headerlink" title="各版本对比"></a>各版本对比</h2><p>了解各版本差异，可以查看官方文档。</p>
<p><a href="http://jmeter.apache.org/changes_history.html">http://jmeter.apache.org/changes_history.html</a></p>
<p>下面是我阅读时笔记，主要是我重点关注的一些点</p>
<span id="more"></span>

<h3 id="Version-5-3"><a href="#Version-5-3" class="headerlink" title="Version 5.3"></a>Version 5.3</h3><ul>
<li><p><strong>httpclient4.time_to_live 的</strong>默认值已从<strong>2000</strong>修改为<strong>60000</strong>，这意味着 HTTP 连接的寿命将比以前更长。这会影响连接创建和 SSL 握手，请参阅<a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=64289"> 错误 64289</a></p>
</li>
<li><p><a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=64289">错误 64289</a> - 将<strong>httpclient4.time_to_live 设置</strong>为<strong>60000</strong>以更接近典型的浏览器行为</p>
</li>
</ul>
<h3 id="Version-5-2"><a href="#Version-5-2" class="headerlink" title="Version 5.2"></a>Version 5.2</h3><ul>
<li><a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=63720">错误 63720</a> - BackendListener：InfluxDBBackendListenerClient 添加对 InfluxDB 2 的支持。由 Jakub Bednář (<a href="https://github.com/bednar">https://github.com/bednar</a>) 提供</li>
<li><a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=62861">错误 62861</a> - 线程组：提供配置新迭代是新用户还是相同用户的能力（将应用于 Cookie 管理器、缓存管理器和 httpclient.reset_state_on_thread_group_iteration）。由 Ubik Load Pack 提供（在 ubikloadpack.com 上提供支持）</li>
</ul>
<h3 id="Version-5-0"><a href="#Version-5-0" class="headerlink" title="Version 5.0"></a>Version 5.0</h3><ul>
<li>从 JMeter 5.0 开始，当使用默认的 HC4 实现时，JMeter 将在每个线程组迭代上重置 HTTP 状态（SSL 状态 + 连接）。如果您不想要这种行为，请设置<strong>httpclient.reset_state_on_thread_group_iteration=false</strong></li>
<li>从 JMeter 5.0 开始，关于上述评论，<strong>https.use.cached.ssl.context</strong>已被弃用，不再使用。</li>
<li>从 JMeter 5.0 开始，当使用 CSV 输出时，子结果现在也将输出到 CSV 文件。要恢复到以前的行为集<strong>jmeter.save.saveservice.subresults=false</strong>，请参阅<a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=62470"> 错误 62470</a>、<a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=60917"> 错误 60917</a>、<a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=62550"> 错误 62550</a>。</li>
</ul>
<h3 id="Version-4-0"><a href="#Version-4-0" class="headerlink" title="Version 4.0"></a>Version 4.0</h3><ul>
<li><a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=61794">错误 61794</a> - Influxdb 后端：只需在 GUI 后端侦听器上创建新行并在其名称前加上“ <strong>TAG_</strong> ”，即可添加任意数量的自定义标签</li>
<li><a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=61709">错误 61709</a> - SampleResult：添加方法**setIgnore()**以使 JMeter 忽略 SampleResult 并且不将其发送给侦听器</li>
<li><a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=61806">错误 61806</a> - 允许在后处理器和断言脚本（JSR223 元素）中使用<strong>SampleResult#setIgnore(</strong> )</li>
</ul>
<h3 id="Version-3-3"><a href="#Version-3-3" class="headerlink" title="Version 3.3"></a>Version 3.3</h3><p>InfluxDB BackendListener 现在支持通过 UDP 协议将结果发送到 InfluxDB。</p>
<p><img src="http://jmeter.apache.org/images/screenshots/changes/3.3/influxdb_udp.png" alt="img"></p>
<ul>
<li>在 InfluxDbBackendListenerClient 中，<strong>statut</strong>属性已重命名为<strong>status</strong></li>
<li>默认情况下，JMeter 不会再截断超过 10 MB 的响应。如果要启用此截断，请参阅属性<strong>httpsampler.max_bytes_to_store_per_request</strong></li>
<li><a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=61121">错误 61121</a> - InfluxdbBackendListenerClient：仅发送所有百分位数，而不是<strong>KO</strong>和<strong>OK</strong></li>
<li><a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=60743">错误 60743</a> - 由于 HTTPCORE-446，停止/关闭测试可能会造成死锁，已通过 HttpCore 升级到 4.4.7 修复</li>
</ul>
<h3 id="Version-3-2"><a href="#Version-3-2" class="headerlink" title="Version 3.2"></a>Version 3.2</h3><p>JMeter 现在提供了一个与 InfluxDB 接口的新 BackendListener 实现。此实现使用异步 HTTP 调用通过其<a href="https://docs.influxdata.com/influxdb/v1.2/guides/writing_data/">HTTP API</a>向 InfluxDB 发送数据， 并为您提供以下带有注释的图表。</p>
<p><img src="http://jmeter.apache.org/images/screenshots/changes/3.2/backend_influxdb.png" alt="img"></p>
<ul>
<li><p>报告现在可以根据正则表达式或样本名称自定义每个事务的 APDEX 阈值。下面的示例将为样本 sample(\d+)、sampleA 和场景 B 应用不同的阈值，而不是声明的默认阈值（500 和 1500 用于满足和容忍的阈值）：</p>
  <pre class="line-numbers language-none"><code class="language-none">jmeter.reportgenerator.apdex_satisfied_threshold&#x3D;500 
jmeter.reportgenerator.apdex_tolerated_threshold&#x3D;1500 
jmeter.reportgenerator.apdex_per_transaction&#x3D;sample(\\d+):1000|2000;\ 
    sampleA:3000|4000;\ 
    scenarioB:5000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p><a href="https://bz.apache.org/bugzilla/show_bug.cgi?id=59882">错误 59882</a> - 减少内存分配以获得更好的吞吐量。由 Benoit Wiart（在 ubik-ingenierie.com 上的 b.wiart）通过<a href="https://github.com/apache/jmeter/pull/217"> 拉取请求 #217</a>和<a href="https://github.com/apache/jmeter/pull/228"> 拉取请求 #228 提供</a> </p>
</li>
<li><p>如果您在启动时收到有关多个 SLF4J 绑定的警告。删除 Apache JMeter 提供的绑定 <strong>lib/ApacheJMeter_slf4j_logkit.jar</strong>或所有其他报告的绑定。有关更多信息，您可以查看<a href="http://www.slf4j.org/codes.html#multiple_bindings">SLF4Js 自己的信息页面。</a></p>
</li>
</ul>
<h2 id="二次开发学习"><a href="#二次开发学习" class="headerlink" title="二次开发学习"></a>二次开发学习</h2><p><a href="https://www.cnblogs.com/wfer/p/14678827.html">JMeter自定义采样器插件开发</a></p>
<h2 id="PTS-JMeter-Plugin专属插件"><a href="#PTS-JMeter-Plugin专属插件" class="headerlink" title="PTS-JMeter Plugin专属插件"></a>PTS-JMeter Plugin专属插件</h2><p>阿里巴巴在开源压测工具 JMeter 上的实践和优化：</p>
<p><em><a href="https://mp.weixin.qq.com/s/yUcJGzAcigiN0dbgXhaS8g">https://mp.weixin.qq.com/s/yUcJGzAcigiN0dbgXhaS8g</a></em></p>
<p>PTS帮助文档：</p>
<p><em><a href="https://help.aliyun.com/document_detail/379921.html">https://help.aliyun.com/document_detail/379921.html</a></em></p>
<p>当前版本jar包下载：</p>
<p><em><a href="https://jmeter-pts-testing-version.oss-cn-shanghai.aliyuncs.com/plugins/AlibabaCloud-PTS-JMeter-Plugin-1.1.jar?spm=a2c4g.11186623.0.0.4ddc5993bpuaw4&amp;file=AlibabaCloud-PTS-JMeter-Plugin-1.1.jar">https://jmeter-pts-testing-version.oss-cn-shanghai.aliyuncs.com/plugins/AlibabaCloud-PTS-JMeter-Plugin-1.1.jar?spm=a2c4g.11186623.0.0.4ddc5993bpuaw4&amp;file=AlibabaCloud-PTS-JMeter-Plugin-1.1.jar</a></em></p>
]]></content>
      <categories>
        <category>测试</category>
        <category>性能测试工具</category>
      </categories>
      <tags>
        <tag>JMeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux内核参数优化</title>
    <url>/posts/32816/</url>
    <content><![CDATA[<blockquote>
<p>转自——高并发情况下Linux系统及kernel参数优化：<a href="https://www.linuxidc.com/Linux/2018-08/153369.htm">https://www.linuxidc.com/Linux/2018-08/153369.htm</a></p>
<p>调整了一下方便自己查看</p>
</blockquote>
<span id="more"></span>

<p>众所周知在默认参数情况下Linux对高并发支持并不好，主要受限于单进程最大打开文件数限制、内核TCP参数方面和IO事件分配机制等。下面就从几方面来调整使Linux系统能够支持高并发环境。</p>
<h4 id="Iptables相关"><a href="#Iptables相关" class="headerlink" title="Iptables相关"></a>Iptables相关</h4><p>  如非必须，关掉或卸载iptables防火墙，并阻止kernel加载iptables模块。这些模块会影响并发性能。</p>
<h4 id="单进程最大打开文件数限制"><a href="#单进程最大打开文件数限制" class="headerlink" title="单进程最大打开文件数限制"></a>单进程最大打开文件数限制</h4><p>  一般的发行版，限制单进程最大可以打开1024个文件，这是远远不能满足高并发需求的，调整过程如下:</p>
<p>  在#号提示符下敲入:</p>
<pre class="line-numbers language-none"><code class="language-none"># ulimit -n 65535<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>将root启动的单一进程的最大可以打开的文件数设置为65535个。如果系统回显类似于“Operationnotpermitted”之类的话，说明上述限制修改失败，实际上是因为在中指定的数值超过了Linux系统对该用户打开文件数的软限制或硬限制。因此，就需要修改Linux系统对用户的关于打开文件数的软限制和硬限制。</p>
<p>第一步，修改limits.conf文件，并添加：</p>
<pre class="line-numbers language-none"><code class="language-none"># vim &#x2F;etc&#x2F;security&#x2F;limits.conf
* soft nofile 65535
* hard nofile 65535<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>可以写成</p>
<pre class="line-numbers language-none"><code class="language-none">* - nofile 65535<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>其中’*’号表示修改所有用户的限制；soft或hard指定要修改软限制还是硬限制；65536则指定了想要修改的新的限制值，即最大打开文件数(请注意软限制值要小于或等于硬限制)。修改完后保存文件。</p>
<p>第二步，修改/etc/pam.d/login文件，在文件中添加如下行：</p>
<pre class="line-numbers language-none"><code class="language-none"># vim &#x2F;etc&#x2F;pam.d&#x2F;login
session required &#x2F;lib&#x2F;security&#x2F;pam_limits.so

# 64位系统应该为这个路径
session required &#x2F;lib64&#x2F;security&#x2F;pam_limits.so<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>  这是告诉Linux在用户完成系统登录后，应该调用pam_limits.so模块来设置系统对该用户可使用的各种资源数量的最大限制(包括用户可打开的最大文件数限制)，而pam_limits.so模块就会从/etc/security/limits.conf文件中读取配置来设置这些限制值。修改完后保存此文件。</p>
<p>第三步，查看Linux系统级的最大打开文件数限制，使用如下命令：</p>
<pre class="line-numbers language-none"><code class="language-none"># cat &#x2F;proc&#x2F;sys&#x2F;fs&#x2F;file-max
32568<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>  这表明这台Linux系统最多允许同时打开(即包含所有用户打开文件数总和)32568个文件，是Linux系统级硬限制，所有用户级的打开文件数限制都不应超过这个数值。通常这个系统级硬限制是Linux系统在启动时根据系统硬件资源状况计算出来的最佳的最大同时打开文件数限制，如果没有特殊需要，不应该修改此限制，除非想为用户级打开文件数限制设置超过此限制的值。修改此硬限制的方法是修改/etc/sysctl.conf文件内fs.file-max= 131072</p>
<p>这是让Linux在启动完成后强行将系统级打开文件数硬限制设置为131072。修改完后保存此文件。</p>
<p>  完成上述步骤后重启系统，一般情况下就可以将Linux系统对指定用户的单一进程允许同时打开的最大文件数限制设为指定的数值。如果重启后用ulimit-n命令查看用户可打开文件数限制仍然低于上述步骤中设置的最大值，这可能是因为在用户登录脚本/etc/profile中使用ulimit-n命令已经将用户可同时打开的文件数做了限制。由于通过ulimit-n修改系统对用户可同时打开文件的最大数限制时，新修改的值只能小于或等于上次ulimit-n设置的值，因此想用此命令增大这个限制值是不可能的。所以，如果有上述问题存在，就只能去打开/etc/profile脚本文件，在文件中查找是否使用了ulimit-n限制了用户可同时打开的最大文件数量，如果找到，则删除这行命令，或者将其设置的值改为合适的值，然后保存文件，用户退出并重新登录系统即可。</p>
<p>  通过上述步骤，就为支持高并发TCP连接处理的通讯处理程序解除关于打开文件数量方面的系统限制。</p>
<h4 id="内核TCP参数方面"><a href="#内核TCP参数方面" class="headerlink" title="内核TCP参数方面"></a>内核TCP参数方面</h4><p>  Linux系统下，TCP连接断开后，会以TIME_WAIT状态保留一定的时间，然后才会释放端口。当并发请求过多的时候，就会产生大量的TIME_WAIT状态的连接，无法及时断开的话，会占用大量的端口资源和服务器资源。这个时候我们可以优化TCP的内核参数，来及时将TIME_WAIT状态的端口清理掉。</p>
<p>  下面介绍的方法只对拥有大量TIME_WAIT状态的连接导致系统资源消耗有效，如果不是这种情况下，效果可能不明显。可以使用netstat命令去查TIME_WAIT状态的连接状态，输入下面的组合命令，查看当前TCP连接的状态和对应的连接数量：</p>
<pre class="line-numbers language-none"><code class="language-none"># netstat -n | awk &#39;&#x2F;^tcp&#x2F; &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这个命令会输出类似下面的结果：</p>
<p>LAST_ACK16<br>SYN_RECV348<br>ESTABLISHED70<br>FIN_WAIT1229<br>FIN_WAIT230<br>CLOSING33<br>TIME_WAIT18098</p>
<p>  我们只用关心TIME_WAIT的个数，在这里可以看到，有18000多个TIME_WAIT，这样就占用了18000多个端口。要知道端口的数量只有65535个，占用一个少一个，会严重的影响到后继的新连接。这种情况下，我们就有必要调整下Linux的TCP内核参数，让系统更快的释放TIME_WAIT连接。</p>
<p>编辑配置文件:/etc/sysctl.conf，在这个文件中，加入下面的几行内容：</p>
<pre class="line-numbers language-none"><code class="language-none"># vim &#x2F;etc&#x2F;sysctl.conf
net.ipv4.tcp_syncookies &#x3D; 1
net.ipv4.tcp_tw_reuse &#x3D; 1
net.ipv4.tcp_tw_recycle &#x3D; 1
net.ipv4.tcp_fin_timeout &#x3D; 30<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>输入下面的命令，让内核参数生效：</p>
<pre class="line-numbers language-none"><code class="language-none"># sysctl -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>简单的说明上面的参数的含义：</p>
<pre class="line-numbers language-none"><code class="language-none">net.ipv4.tcp_syncookies&#x3D; 1
#表示开启SYNCookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN***，默认为0，表示关闭；

net.ipv4.tcp_tw_reuse&#x3D; 1
#表示开启重用。允许将TIME-WAITsockets重新用于新的TCP连接，默认为0，表示关闭；

net.ipv4.tcp_tw_recycle&#x3D; 1
#表示开启TCP连接中TIME-WAITsockets的快速回收，默认为0，表示关闭；

net.ipv4.tcp_fin_timeout
#修改系統默认的TIMEOUT 时间。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>  在经过这样的调整之后，除了会进一步提升服务器的负载能力之外，还能够防御小流量程度的DoS、CC和SYN***。</p>
<p>  此外，如果你的连接数本身就很多，我们可以再优化一下TCP的可使用端口范围，进一步提升服务器的并发能力。依然是往上面的参数文件中，加入下面这些配置：</p>
<pre class="line-numbers language-none"><code class="language-none">net.ipv4.tcp_keepalive_time &#x3D; 1200
net.ipv4.ip_local_port_range &#x3D; 1024 65535
net.ipv4.tcp_max_syn_backlog &#x3D; 8192
net.ipv4.tcp_max_tw_buckets &#x3D; 5000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>  这几个参数，建议只在流量非常大的服务器上开启，会有显著的效果。一般的流量小的服务器上，没有必要去设置这几个参数。</p>
<pre class="line-numbers language-none"><code class="language-none">net.ipv4.tcp_keepalive_time&#x3D; 1200
#表示当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时，改为20分钟。

net.ipv4.ip_local_port_range&#x3D; 1024 65535
#表示用于向外连接的端口范围。缺省情况下很小，改为1024到65535。

net.ipv4.tcp_max_syn_backlog&#x3D; 8192
#表示SYN队列的长度，默认为1024，加大队列长度为8192，可以容纳更多等待连接的网络连接数。

net.ipv4.tcp_max_tw_buckets&#x3D; 5000
#表示系统同时保持TIME_WAIT的最大数量，如果超过这个数字，TIME_WAIT将立刻被清除并打印警告信息。默认为180000，改为5000。此项参数可以控制TIME_WAIT的最大数量，只要超出了。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="内核其他TCP参数说明："><a href="#内核其他TCP参数说明：" class="headerlink" title="内核其他TCP参数说明："></a>内核其他TCP参数说明：</h4><pre class="line-numbers language-none"><code class="language-none">net.ipv4.tcp_max_syn_backlog&#x3D; 65536
#记录的那些尚未收到客户端确认信息的连接请求的最大值。对于有128M内存的系统而言，缺省值是1024，小内存的系统则是128。

net.core.netdev_max_backlog&#x3D; 32768
#每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。

net.core.somaxconn&#x3D; 32768
#例如web应用中listen函数的backlog默认会给我们内核参数的net.core.somaxconn限制到128，而nginx定义的NGX_LISTEN_BACKLOG默认为511，所以有必要调整这个值。

net.core.wmem_default&#x3D; 8388608
net.core.rmem_default&#x3D; 8388608
net.core.rmem_max&#x3D; 16777216          #最大socket读buffer,可参考的优化值:873200
net.core.wmem_max&#x3D; 16777216          #最大socket写buffer,可参考的优化值:873200
net.ipv4.tcp_timestsmps&#x3D; 0
#时间戳可以避免序列号的卷绕。一个1Gbps的链路肯定会遇到以前用过的序列号。时间戳能够让内核接受这种“异常”的数据包。这里需要将其关掉。

net.ipv4.tcp_synack_retries&#x3D; 2
#为了打开对端的连接，内核需要发送一个SYN并附带一个回应前面一个SYN的ACK。也就是所谓三次握手中的第二次握手。这个设置决定了内核放弃连接之前发送SYN+ACK包的数量。

net.ipv4.tcp_syn_retries&#x3D; 2
#在内核放弃建立连接之前发送SYN包的数量。

#net.ipv4.tcp_tw_len&#x3D; 1
net.ipv4.tcp_tw_reuse&#x3D; 1
# 开启重用。允许将TIME-WAITsockets重新用于新的TCP连接。

net.ipv4.tcp_wmem&#x3D; 8192 436600 873200
# TCP写buffer,可参考的优化值:8192 436600 873200

net.ipv4.tcp_rmem  &#x3D; 32768 436600 873200
# TCP读buffer,可参考的优化值:32768 436600 873200

net.ipv4.tcp_mem&#x3D; 94500000 91500000 92700000
# 同样有3个值,意思是:
net.ipv4.tcp_mem[0]:低于此值，TCP没有内存压力。
net.ipv4.tcp_mem[1]:在此值下，进入内存压力阶段。
net.ipv4.tcp_mem[2]:高于此值，TCP拒绝分配socket。
上述内存单位是页，而不是字节。可参考的优化值是:7864321048576 1572864

net.ipv4.tcp_max_orphans&#x3D; 3276800
#系统中最多有多少个TCP套接字不被关联到任何一个用户文件句柄上。
如果超过这个数字，连接将即刻被复位并打印出警告信息。
这个限制仅仅是为了防止简单的DoS***，不能过分依靠它或者人为地减小这个值，
更应该增加这个值(如果增加了内存之后)。

net.ipv4.tcp_fin_timeout&#x3D; 30
#如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。对端可以出错并永远不关闭连接，甚至意外当机。缺省值是60秒。2.2 内核的通常值是180秒，你可以按这个设置，但要记住的是，即使你的机器是一个轻载的WEB服务器，也有因为大量的死套接字而内存溢出的风险，FIN-WAIT-2的危险性比FIN-WAIT-1要小，因为它最多只能吃掉1.5K内存，但是它们的生存期长些。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>  同时还涉及到一个TCP 拥塞算法的问题，你可以用下面的命令查看本机提供的拥塞算法控制模块：</p>
<p>sysctlnet.ipv4.tcp_available_congestion_control</p>
<p>  对于几种算法的分析，详情可以参考下：TCP拥塞控制算法的优缺点、适用环境、性能分析，比如高延时可以试用hybla，中等延时可以试用htcp算法等。</p>
<pre class="line-numbers language-none"><code class="language-none">如果想设置TCP 拥塞算法为hybla
net.ipv4.tcp_congestion_control&#x3D;hybla

额外的，对于内核版高于于3.7.1的，我们可以开启tcp_fastopen：
net.ipv4.tcp_fastopen&#x3D; 3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="IO事件分配机制"><a href="#IO事件分配机制" class="headerlink" title="IO事件分配机制"></a>IO事件分配机制</h4><p>  在Linux启用高并发TCP连接，必须确认应用程序是否使用了合适的网络I/O技术和I/O事件分派机制。可用的I/O技术有同步I/O，非阻塞式同步I/O，以及异步I/O。在高TCP并发的情形下，如果使用同步I/O，这会严重阻塞程序的运转，除非为每个TCP连接的I/O创建一个线程。但是，过多的线程又会因系统对线程的调度造成巨大开销。因此，在高TCP并发的情形下使用同步I/O是不可取的，这时可以考虑使用非阻塞式同步I/O或异步I/O。非阻塞式同步I/O的技术包括使用select()，poll()，epoll等机制。异步I/O的技术就是使用AIO。</p>
<p>  从I/O事件分派机制来看，使用select()是不合适的，因为它所支持的并发连接数有限(通常在1024个以内)。如果考虑性能，poll()也是不合适的，尽管它可以支持的较高的TCP并发数，但是由于其采用“轮询”机制，当并发数较高时，其运行效率相当低，并可能存在I/O事件分派不均，导致部分TCP连接上的I/O出现“饥饿”现象。而如果使用epoll或AIO，则没有上述问题(早期Linux内核的AIO技术实现是通过在内核中为每个I/O请求创建一个线程来实现的，这种实现机制在高并发TCP连接的情形下使用其实也有严重的性能问题。但在最新的Linux内核中，AIO的实现已经得到改进)。</p>
<p>综上所述，在开发支持高并发TCP连接的Linux应用程序时，应尽量使用epoll或AIO技术来实现并发的TCP连接上的I/O控制，这将为提升程序对高并发TCP连接的支持提供有效的I/O保证。</p>
<p>经过这样的优化配置之后，服务器的TCP并发处理能力会显著提高。以上配置仅供参考，用于生产环境请根据自己的实际情况调整观察再调整。</p>
]]></content>
      <categories>
        <category>系统配置</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Java反编译工具</title>
    <url>/posts/31942/</url>
    <content><![CDATA[<h2 id="JD-GUI"><a href="#JD-GUI" class="headerlink" title="JD-GUI"></a>JD-GUI</h2><p>官网下载：<a href="https://jd-gui.apponic.com/">https://jd-gui.apponic.com/</a></p>
<p>git下载或编译：<br><a href="http://java-decompiler.github.io/">http://java-decompiler.github.io/</a></p>
<p><a href="https://github.com/java-decompiler/jd-gui/releases">https://github.com/java-decompiler/jd-gui/releases</a></p>
<h2 id="Luyten"><a href="#Luyten" class="headerlink" title="Luyten"></a>Luyten</h2><p>git下载或编译：<a href="https://github.com/deathmarine/Luyten/releases">https://github.com/deathmarine/Luyten/releases</a></p>
<span id="more"></span>

<h3 id="java版本的问题"><a href="#java版本的问题" class="headerlink" title="java版本的问题"></a>java版本的问题</h3><p>mac提示：无法启动 ‘Luyten’.必须安装Java  7 及以上版本才能够使用该程序！<br>win提示：This Application requires a Java Runtime Environment 1.7.0-1.8.0</p>
<h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载源码</span>
<span class="token function">git</span> clone git@github.com:deathmarine/Luyten.git

<span class="token comment"># 修改pom.xml</span>

<span class="token comment"># &lt;minVersion>1.7.0&lt;/minVersion></span>
<span class="token comment"># &lt;maxVersion>1.8.0&lt;/maxVersion></span>
<span class="token operator">&lt;</span>path<span class="token operator">></span><span class="token variable">$&#123;java.home&#125;</span><span class="token operator">&lt;</span>/path<span class="token operator">></span>

<span class="token comment"># &lt;url>https://raw.githubusercontent.com/tofi86/universalJavaApplicationStub/master/src/universalJavaApplicationStub&lt;/url></span>
<span class="token operator">&lt;</span>url<span class="token operator">></span>https://gitee.com/sxl_db/universalJavaApplicationStub/raw/master/src/universalJavaApplicationStub<span class="token operator">&lt;</span>/url<span class="token operator">></span>

<span class="token comment"># 打包</span>
mvn clean package
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>测试</category>
        <category>Java反编译工具</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes搭建与使用</title>
    <url>/posts/28864/</url>
    <content><![CDATA[<h2 id="K8S"><a href="#K8S" class="headerlink" title="K8S"></a>K8S</h2><p>官方文档</p>
<p><a href="https://kubernetes.io/docs/setup/">https://kubernetes.io/docs/setup/</a></p>
<p>官方中文文档</p>
<p><a href="https://kubernetes.io/zh/docs/setup/">https://kubernetes.io/zh/docs/setup/</a></p>
<p>Kubectl 自动补全</p>
<p><a href="https://kubernetes.io/zh/docs/reference/kubectl/cheatsheet/">https://kubernetes.io/zh/docs/reference/kubectl/cheatsheet/</a></p>
<span id="more"></span>

<h3 id="本地计算机运行一个单节点k8s集群"><a href="#本地计算机运行一个单节点k8s集群" class="headerlink" title="本地计算机运行一个单节点k8s集群"></a>本地计算机运行一个单节点k8s集群</h3><pre class="line-numbers language-none"><code class="language-none">minikube start --registry-mirror&#x3D;https:&#x2F;&#x2F;registry.docker-cn.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="查看k8s-dashboard"><a href="#查看k8s-dashboard" class="headerlink" title="查看k8s dashboard"></a>查看k8s dashboard</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">minikube dashboard<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="如果使用旧版本，可能需要降低minikube的版本"><a href="#如果使用旧版本，可能需要降低minikube的版本" class="headerlink" title="如果使用旧版本，可能需要降低minikube的版本"></a>如果使用旧版本，可能需要降低minikube的版本</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">minikube start --kubernetes-version v1.16.15<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="删除所有集群和配置"><a href="#删除所有集群和配置" class="headerlink" title="删除所有集群和配置"></a>删除所有集群和配置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">minikube delete <span class="token parameter variable">--all</span> <span class="token parameter variable">--purge</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<pre class="line-numbers language-none"><code class="language-none">minikube ip

minikube start --extra-config&#x3D;apiserver.service-node-port-range&#x3D;1-65535

minikube tunnel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="Helm-包管理工具"><a href="#Helm-包管理工具" class="headerlink" title="Helm 包管理工具"></a>Helm 包管理工具</h2><p>官方中文文档</p>
<p><a href="https://helm.sh/zh/docs/intro/quickstart/">https://helm.sh/zh/docs/intro/quickstart/</a></p>
<pre class="line-numbers language-fallback" data-language="fallback"><code class="language-fallback">helm repo add bitnami https:&#x2F;&#x2F;charts.bitnami.com&#x2F;bitnami
helm repo add aliyuncs https:&#x2F;&#x2F;apphub.aliyuncs.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>



<h3 id="helm-install时提示Error-INSTALLATION-FAILED-failed-to-download"><a href="#helm-install时提示Error-INSTALLATION-FAILED-failed-to-download" class="headerlink" title="helm install时提示Error: INSTALLATION FAILED: failed to download"></a>helm install时提示Error: INSTALLATION FAILED: failed to download</h3><p>解决方法</p>
<p><code>helm repo update</code></p>
<h2 id="Ingress"><a href="#Ingress" class="headerlink" title="Ingress"></a>Ingress</h2><p><a href="https://kubernetes.io/zh/docs/concepts/services-networking/ingress/">https://kubernetes.io/zh/docs/concepts/services-networking/ingress/</a></p>
<h2 id="NGINX-Ingress-Controller"><a href="#NGINX-Ingress-Controller" class="headerlink" title="NGINX Ingress Controller"></a>NGINX Ingress Controller</h2><p><a href="https://kubernetes.github.io/ingress-nginx/user-guide/basic-usage/">https://kubernetes.github.io/ingress-nginx/user-guide/basic-usage/</a></p>
<p><a href="https://kubernetes.github.io/ingress-nginx/examples/rewrite/">https://kubernetes.github.io/ingress-nginx/examples/rewrite/</a></p>
<p><a href="https://kubernetes.github.io/ingress-nginx/examples/customization/custom-configuration/">https://kubernetes.github.io/ingress-nginx/examples/customization/custom-configuration/</a></p>
]]></content>
      <categories>
        <category>测试</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac自启动设置</title>
    <url>/posts/20201/</url>
    <content><![CDATA[<h2 id="plist文件分布"><a href="#plist文件分布" class="headerlink" title="plist文件分布"></a>plist文件分布</h2><p>/System/Library/LaunchDaemons/ （System-wide daemons provided by OS X）<br>其中 apache的httpd程序启动配置文件 org.apache.httpd.plist 就在这里。</p>
<p>/System/Library/LaunchAgents/ （由Mac OS X为用户定义的任务项）</p>
<p>/Library/LaunchDaemons （由管理员定义的守护进程任务项 ）</p>
<p>/Library/LaunchAgents （由管理员为用户定义的任务项 ）<br>如果放到/Library/LaunchAgents/下面的话，就是一开机就启动哦～</p>
<p>~/Library/LaunchAgents （ 由用户自己定义的任务项 ）</p>
<span id="more"></span>

<h2 id="launchctl-常用命令"><a href="#launchctl-常用命令" class="headerlink" title="launchctl 常用命令"></a>launchctl 常用命令</h2><ol>
<li><p>显示当前的启动脚本<br>launchctl list</p>
</li>
<li><p>开机时自动启动Apache服务器<br>sudo launchctl load -w /System/Library/LaunchDaemons/org.apache.httpd.plist</p>
</li>
<li><p>设置开机启动并立即启动改服务<br>launchctl load -w   **.pist </p>
</li>
<li><p>设置开机启动但不立即启动服务<br>launchctl load **.pist </p>
</li>
<li><p>停止正在运行的启动脚本<br>sudo launchctl unload [path/to/script]</p>
</li>
<li><p>再加上-w选项即可去除开机启动<br>sudo launchctl unload -w [path/to/script]</p>
</li>
</ol>
]]></content>
      <categories>
        <category>系统配置</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Python环境搭建</title>
    <url>/posts/33618/</url>
    <content><![CDATA[<blockquote>
<p>Anaconda安装文档</p>
<p><a href="https://docs.continuum.io/anaconda/">https://docs.continuum.io/anaconda/</a></p>
<p>下载地址归档</p>
<p><a href="https://repo.anaconda.com/archive/">https://repo.anaconda.com/archive/</a></p>
<p>Miniconda安装文档</p>
<p><a href="https://docs.conda.io/en/latest/miniconda.html#latest-miniconda-installer-links">https://docs.conda.io/en/latest/miniconda.html#latest-miniconda-installer-links</a></p>
</blockquote>
<span id="more"></span>

<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="one-key-python-bat"><a href="#one-key-python-bat" class="headerlink" title="one-key-python.bat"></a>one-key-python.bat</h3><pre class="line-numbers language-bat" data-language="bat"><code class="language-bat">@echo off
chcp 65001

:main
echo 1.下载安装Miniconda
echo 2.下载安装Anaconda
echo 3.创建python2和python3环境
set &#x2F;p choice&#x3D;请输入选项后回车：
if &#x2F;i &quot;%choice%&quot;&#x3D;&#x3D;&quot;1&quot; goto Action1
if &#x2F;i &quot;%choice%&quot;&#x3D;&#x3D;&quot;2&quot; goto Action2
if &#x2F;i &quot;%choice%&quot;&#x3D;&#x3D;&quot;3&quot; goto Action3
cls&amp;set choice&#x3D;&amp;goto main

:Action1
echo 【开始下载...】
del &#x2F;f Miniconda3-latest-Windows-x86_64.exe
powershell wget https:&#x2F;&#x2F;repo.anaconda.com&#x2F;miniconda&#x2F;Miniconda3-latest-Windows-x86_64.exe -OutFile &quot;Miniconda3-latest-Windows-x86_64.exe&quot;

echo 【进入脚本所在目录】
cd &#x2F;d %~dp0

echo 【开始安装，请耐心等待...如无反应，请按回车键检查进度】
start &#x2F;wait &quot;&quot; Miniconda3-latest-Windows-x86_64.exe &#x2F;InstallationType&#x3D;JustMe &#x2F;AddToPath&#x3D;1 &#x2F;RegisterPython&#x3D;1 &#x2F;S &#x2F;D&#x3D;C:\Miniconda3

echo 【完成~】

pause
pause
pause
:Action2
echo 【开始下载...】
del &#x2F;f Anaconda3-latest-Windows-x86_64.exe
powershell wget https:&#x2F;&#x2F;repo.anaconda.com&#x2F;archive&#x2F;Anaconda3-2021.05-Windows-x86_64.exe -OutFile &quot;Anaconda3-latest-Windows-x86_64.exe&quot;

echo 【进入脚本所在目录】
cd &#x2F;d %~dp0

echo 【开始安装，请耐心等待...如无反应，请按回车键检查进度】
start &#x2F;wait &quot;&quot; Anaconda3-latest-Windows-x86_64.exe &#x2F;InstallationType&#x3D;JustMe &#x2F;AddToPath&#x3D;1 &#x2F;RegisterPython&#x3D;1 &#x2F;S &#x2F;D&#x3D;C:\Anaconda3

echo 【完成~】

pause
pause
pause
:Action3
echo 【初始化conda命令】
call conda init --all

echo 【修改conda镜像源为清华源】
call conda config --add channels https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;
call conda config --add channels https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main&#x2F;
call conda config --set show_channel_urls yes

rmdir &#x2F;s&#x2F;q C:\Miniconda3\envs
rmdir &#x2F;s&#x2F;q C:\Anaconda3\envs
echo 【创建python2.7环境】
call conda create --name python27 python&#x3D;2.7 -y

echo 【创建python3.7环境】
call conda create --name python37 python&#x3D;3.7 -y

echo 【修改pip镜像源为阿里源】
call pip config set global.index-url https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple
call pip config set install.trusted-host mirrors.aliyun.com

echo 【完成~】

pause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>测试</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>conda</tag>
      </tags>
  </entry>
  <entry>
    <title>Python虚拟环境管理</title>
    <url>/posts/24195/</url>
    <content><![CDATA[<h2 id="1-venv-amp-virtualenv"><a href="#1-venv-amp-virtualenv" class="headerlink" title="1. venv&amp;virtualenv"></a>1. venv&amp;virtualenv</h2><p><a href="https://docs.python.org/zh-cn/3.9/library/venv.html">https://docs.python.org/zh-cn/3.9/library/venv.html</a></p>
<p><a href="https://virtualenv.pypa.io/en/latest/installation.html">https://virtualenv.pypa.io/en/latest/installation.html</a></p>
<table>
<thead>
<tr>
<th align="left">平台</th>
<th align="left">Shell</th>
<th align="left">用于激活虚拟环境的命令</th>
</tr>
</thead>
<tbody><tr>
<td align="left">POSIX</td>
<td align="left">bash/zsh</td>
<td align="left">$ source <venv>/bin/activate</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">fish</td>
<td align="left">$ source <venv>/bin/activate.fish</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">csh/tcsh</td>
<td align="left">$ source <venv>/bin/activate.csh</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">PowerShell Core</td>
<td align="left">$ <venv>/bin/Activate.ps1</td>
</tr>
<tr>
<td align="left">Windows</td>
<td align="left">cmd.exe</td>
<td align="left">C:&gt; <venv>\Scripts\activate.bat</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">PowerShell</td>
<td align="left">PS C:&gt; <venv>\Scripts\Activate.ps1</td>
</tr>
</tbody></table>
<span id="more"></span>
<h2 id="2-virtualenv-wrapper"><a href="#2-virtualenv-wrapper" class="headerlink" title="2. virtualenv-wrapper"></a>2. virtualenv-wrapper</h2><p><a href="https://virtualenvwrapper.readthedocs.io/en/latest/">https://virtualenvwrapper.readthedocs.io/en/latest/</a></p>
<h2 id="3-conda"><a href="#3-conda" class="headerlink" title="3. conda"></a>3. conda</h2><blockquote>
<p>Anaconda安装文档</p>
<p><a href="https://docs.continuum.io/anaconda/">https://docs.continuum.io/anaconda/</a></p>
<p>下载地址归档</p>
<p><a href="https://repo.anaconda.com/archive/">https://repo.anaconda.com/archive/</a></p>
<p>Miniconda安装文档</p>
<p><a href="https://docs.conda.io/en/latest/miniconda.html#latest-miniconda-installer-links">https://docs.conda.io/en/latest/miniconda.html#latest-miniconda-installer-links</a></p>
</blockquote>
<h3 id="卸载anaconda后cmd-exit-code为1"><a href="#卸载anaconda后cmd-exit-code为1" class="headerlink" title="卸载anaconda后cmd exit code为1"></a>卸载anaconda后cmd exit code为1</h3><p>reg query “HKCU\Software\Microsoft\Command Processor”</p>
<p>reg delete “HKCU\Software\Microsoft\Command Processor” /v AutoRun /f</p>
]]></content>
      <categories>
        <category>测试</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>RocketMQ搭建与压测</title>
    <url>/posts/44860/</url>
    <content><![CDATA[<h1 id="RocketMQ部署"><a href="#RocketMQ部署" class="headerlink" title="RocketMQ部署"></a>RocketMQ部署</h1><h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><p><a href="http://rocketmq.apache.org/docs/quick-start/">http://rocketmq.apache.org/docs/quick-start/</a></p>
<h2 id="历史版本"><a href="#历史版本" class="headerlink" title="历史版本"></a>历史版本</h2><p><a href="https://archive.apache.org/dist/rocketmq/">https://archive.apache.org/dist/rocketmq/</a></p>
<h2 id="中文文档"><a href="#中文文档" class="headerlink" title="中文文档"></a>中文文档</h2><p><a href="https://github.com/apache/rocketmq/tree/master/docs/cn">https://github.com/apache/rocketmq/tree/master/docs/cn</a></p>
<h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><p><a href="https://github.com/apache/rocketmq/blob/master/docs/cn/best_practice.md">https://github.com/apache/rocketmq/blob/master/docs/cn/best_practice.md</a></p>
<h2 id="系统参数调优"><a href="#系统参数调优" class="headerlink" title="系统参数调优"></a>系统参数调优</h2><p><a href="https://github.com/apache/rocketmq/blob/master/distribution/bin/os.sh">https://github.com/apache/rocketmq/blob/master/distribution/bin/os.sh</a></p>
<span id="more"></span>

<h2 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Download &amp; build</span>
<span class="token function">wget</span> <span class="token parameter variable">-N</span> <span class="token parameter variable">-c</span> https://dlcdn.apache.org/rocketmq/4.9.1/rocketmq-all-4.9.1-source-release.zip

<span class="token function">unzip</span> rocketmq-all-4.9.1-source-release.zip
<span class="token builtin class-name">cd</span> rocketmq-all-4.9.1-source-release
mvn -Prelease-all <span class="token parameter variable">-DskipTests</span> clean <span class="token function">install</span> <span class="token parameter variable">-U</span>
<span class="token builtin class-name">cd</span> distribution/target/rocketmq-4.9.1/rocketmq-4.9.1

<span class="token comment"># Download bin</span>
<span class="token function">wget</span> <span class="token parameter variable">-N</span> <span class="token parameter variable">-c</span> https://dlcdn.apache.org/rocketmq/4.9.1/rocketmq-all-4.9.1-bin-release.zip

<span class="token function">unzip</span> rocketmq-all-4.9.1-bin-release.zip
<span class="token builtin class-name">cd</span> rocketmq-all-4.9.1-bin-release

<span class="token comment">#Start</span>
<span class="token function">nohup</span> <span class="token function">sh</span> bin/mqnamesrv <span class="token operator">&amp;</span>
<span class="token function">tail</span> <span class="token parameter variable">-f</span> ~/logs/rocketmqlogs/namesrv.log

<span class="token function">nohup</span> <span class="token function">sh</span> bin/mqbroker <span class="token parameter variable">-n</span> localhost:9876 <span class="token operator">&amp;</span>
<span class="token function">tail</span> <span class="token parameter variable">-f</span> ~/logs/rocketmqlogs/broker.log

<span class="token comment"># Test</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">NAMESRV_ADDR</span><span class="token operator">=</span>localhost:9876
<span class="token function">sh</span> bin/tools.sh org.apache.rocketmq.example.quickstart.Producer

<span class="token function">sh</span> bin/tools.sh org.apache.rocketmq.example.quickstart.Consumer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="k8s部署"><a href="#k8s部署" class="headerlink" title="k8s部署"></a>k8s部署</h2><h3 id="编译rockemq相关镜像"><a href="#编译rockemq相关镜像" class="headerlink" title="编译rockemq相关镜像"></a>编译rockemq相关镜像</h3><p>参考以下仓库</p>
<p><a href="https://github.com/apache/rocketmq-externals.git">https://github.com/apache/rocketmq-externals.git</a></p>
<p><a href="https://github.com/apache/rocketmq-docker.git">https://github.com/apache/rocketmq-docker.git</a></p>
<ul>
<li>rocketmq-docker仓库挺久没更新了<ul>
<li>deployment.yaml中apiVersion需要改为apps/v1</li>
</ul>
</li>
<li><strong>apacherocketmq/rocketmq:4.9.1 not found</strong><ul>
<li>dockerhub中最新只有4.6.0版本</li>
</ul>
</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># fork后修改下，目前我编译的是4.9.1 centos arm64，其他版本镜像暂未编译上传</span>
<span class="token function">git</span> clone https://github.com/huyuwei1996/rocketmq-docker
<span class="token builtin class-name">cd</span> rocketmq-docker

<span class="token builtin class-name">cd</span> image-build
<span class="token function">sh</span> build-image.sh <span class="token number">4.9</span>.1 centos
<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>

<span class="token function">sh</span> stage.sh <span class="token number">4.9</span>.1
<span class="token builtin class-name">cd</span> stages/4.9.1

./play-kubernetes.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl expose deployment rocketmq-ns-deployment <span class="token parameter variable">--type</span><span class="token operator">=</span>NodePort <span class="token parameter variable">--port</span> <span class="token number">9876</span>
minikube <span class="token function">service</span> <span class="token parameter variable">--url</span> rocketmq-ns-deployment

<span class="token comment"># 我这里选择LoadBalancer方式</span>
kubectl expose deployment rocketmq-ns-deployment <span class="token parameter variable">--type</span><span class="token operator">=</span>LoadBalancer <span class="token parameter variable">--port</span> <span class="token number">9876</span>
minikube tunnel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="检查和测试"><a href="#检查和测试" class="headerlink" title="检查和测试"></a>检查和测试</h2><p><strong>rocketmq-broker-deployment报错：Error when measuring disk space usage, file doesn’t exist on this path: /home/rocketmq/store/commitlog</strong></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">需要进入pod执行
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/rocketmq/store/commitlog
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/rocketmq/store/consumequeue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Test</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">NAMESRV_ADDR</span><span class="token operator">=</span>localhost:9876
<span class="token function">sh</span> bin/tools.sh org.apache.rocketmq.example.quickstart.Producer

<span class="token function">sh</span> bin/tools.sh org.apache.rocketmq.example.quickstart.Consumer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>tools.sh测试时报错：org.apache.rocketmq.remoting.exception.RemotingTooMuchRequestException: sendDefaultImpl call timeout</strong><br>如果在本地对k8s中的rocketmq测试，除了9876端口需要开放，还有10909，10911需要开放</p>
<h1 id="压测执行"><a href="#压测执行" class="headerlink" title="压测执行"></a>压测执行</h1>]]></content>
      <categories>
        <category>测试</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>rocketmq</tag>
        <tag>m1</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode常用</title>
    <url>/posts/48802/</url>
    <content><![CDATA[<h2 id="setting-json默认位置"><a href="#setting-json默认位置" class="headerlink" title="setting.json默认位置"></a>setting.json默认位置</h2><p>使用 Ctrl+Shift+P 或者点击左下角齿轮图标，选择命令面板。然后输入 settings.json 来搜索</p>
<span id="more"></span>
<h3 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h3><p>~/Library/Application Support/Code/User/settings.json</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>
  <span class="token property">"python.linting.flake8Enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">"python.formatting.provider"</span><span class="token operator">:</span> <span class="token string">"autopep8"</span><span class="token punctuation">,</span>
  <span class="token property">"python.linting.flake8Args"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">"--max-line-length=248"</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">"python.linting.pylintEnabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">"python.formatting.autopep8Args"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">"--max-line-length=248"</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">"editor.fontSize"</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span>
  <span class="token property">"editor.fontFamily"</span><span class="token operator">:</span> <span class="token string">"JetBrains Mono"</span><span class="token punctuation">,</span>
  <span class="token property">"editor.tabSize"</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="django项目"><a href="#django项目" class="headerlink" title="django项目"></a>django项目</h4><p>launch.json</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>
  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Python: Django"</span><span class="token punctuation">,</span>
  <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"python"</span><span class="token punctuation">,</span>
  <span class="token property">"request"</span><span class="token operator">:</span> <span class="token string">"launch"</span><span class="token punctuation">,</span>
  <span class="token property">"stopOnEntry"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">"program"</span><span class="token operator">:</span> <span class="token string">"$&#123;workspaceFolder&#125;/manage.py"</span><span class="token punctuation">,</span>
  <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">"runserver"</span><span class="token punctuation">,</span>
      <span class="token string">"--noreload"</span><span class="token punctuation">,</span>
      <span class="token string">"--nothreading"</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">"django"</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="vue项目"><a href="#vue项目" class="headerlink" title="vue项目"></a>vue项目</h4><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>
    <span class="token property">"typescript.preferences.quoteStyle"</span><span class="token operator">:</span> <span class="token string">"single"</span><span class="token punctuation">,</span>
    <span class="token property">"javascript.preferences.quoteStyle"</span><span class="token operator">:</span> <span class="token string">"single"</span><span class="token punctuation">,</span>
    <span class="token comment">// tab 大小为2个空格</span>
    <span class="token property">"editor.tabSize"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token comment">// 保存时格式化</span>
    <span class="token property">"editor.formatOnSave"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token comment">// 编辑器换行</span>
    <span class="token property">"editor.wordWrap"</span><span class="token operator">:</span> <span class="token string">"off"</span><span class="token punctuation">,</span>
    <span class="token comment">// //让函数(名)和后面的括号之间加个空格</span>
    <span class="token property">"javascript.format.insertSpaceBeforeFunctionParenthesis"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">// 开启 vscode 文件路径导航</span>
    <span class="token property">"breadcrumbs.enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">// 选择 vue 文件中 template 的格式化工具</span>
    <span class="token property">"vetur.format.defaultFormatter.html"</span><span class="token operator">:</span> <span class="token string">"js-beautify-html"</span><span class="token punctuation">,</span>
    <span class="token comment">// 让vue中的js按编辑器自带的ts格式进行格式化</span>
    <span class="token property">"vetur.format.defaultFormatter.js"</span><span class="token operator">:</span> <span class="token string">"vscode-typescript"</span><span class="token punctuation">,</span>
    <span class="token comment">// vetur 的自定义设置</span>
    <span class="token property">"vetur.format.defaultFormatterOptions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        <span class="token property">"js-beautify-html"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
            <span class="token property">"wrap_line_length"</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
            <span class="token property">"wrap_attributes"</span><span class="token operator">:</span> <span class="token string">"auto"</span><span class="token punctuation">,</span><span class="token comment">//"force-aligned" //属性强制折行对齐</span>
            <span class="token property">"end_with_newline"</span><span class="token operator">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token property">"prettier"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
            <span class="token property">"singleQuote"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token property">"semi"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token property">"printWidth"</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
            <span class="token property">"wrapAttributes"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token property">"sortAttributes"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token property">"trailingComma"</span><span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="安装的插件"><a href="#安装的插件" class="headerlink" title="安装的插件"></a>安装的插件</h2><h3 id="Atom-One-Dark-Theme-Mahmoud-Ali"><a href="#Atom-One-Dark-Theme-Mahmoud-Ali" class="headerlink" title="Atom One Dark Theme - Mahmoud Ali"></a>Atom One Dark Theme - Mahmoud Ali</h3><h3 id="Catppuccin-for-VSCode-Catppuccin"><a href="#Catppuccin-for-VSCode-Catppuccin" class="headerlink" title="Catppuccin for VSCode - Catppuccin"></a>Catppuccin for VSCode - Catppuccin</h3><h3 id="Markdown-All-in-One-Yu-Zhang"><a href="#Markdown-All-in-One-Yu-Zhang" class="headerlink" title="Markdown All in One - Yu Zhang"></a>Markdown All in One - Yu Zhang</h3><h3 id="Python-Microsoft"><a href="#Python-Microsoft" class="headerlink" title="Python - Microsoft"></a>Python - Microsoft</h3><h3 id="Pylance-Microsoft"><a href="#Pylance-Microsoft" class="headerlink" title="Pylance - Microsoft"></a>Pylance - Microsoft</h3><!-- ### Django - Baptiste Darthenay -->

<h3 id="Django-Template-Roberth-Solis"><a href="#Django-Template-Roberth-Solis" class="headerlink" title="Django Template - Roberth Solís"></a>Django Template - Roberth Solís</h3><h3 id="SFTP-Natizyskunk"><a href="#SFTP-Natizyskunk" class="headerlink" title="SFTP - Natizyskunk"></a>SFTP - Natizyskunk</h3><h3 id="CSS-Peek-Pranay-Prakash"><a href="#CSS-Peek-Pranay-Prakash" class="headerlink" title="CSS Peek - Pranay Prakash"></a>CSS Peek - Pranay Prakash</h3><blockquote>
<p>参考：</p>
<ol>
<li><a href="https://www.jianshu.com/p/bde39b7f72fe">https://www.jianshu.com/p/bde39b7f72fe</a></li>
<li><a href="https://www.yisu.com/zixun/329293.html">https://www.yisu.com/zixun/329293.html</a></li>
</ol>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>Windows包管理 - choco、scoop</title>
    <url>/posts/62180/</url>
    <content><![CDATA[<h2 id="关闭Win10自带的Python别名"><a href="#关闭Win10自带的Python别名" class="headerlink" title="关闭Win10自带的Python别名"></a>关闭Win10自带的Python别名</h2><blockquote>
<ol>
<li>设置</li>
<li>应用</li>
<li>应用和功能</li>
<li>应用执行别名</li>
<li>把<code>python.exe</code>和<code>python3.exe</code>关掉</li>
<li>检查<code>explorer %USERPROFILE%\AppData\Local\Microsoft\WindowsApps</code></li>
</ol>
</blockquote>
<span id="more"></span>
<h2 id="chocolaty"><a href="#chocolaty" class="headerlink" title="chocolaty"></a>chocolaty</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">Set-ExecutionPolicy</span> Bypass <span class="token operator">-</span>Scope <span class="token keyword">Process</span> <span class="token operator">-</span>Force<span class="token punctuation">;</span> <span class="token namespace">[System.Net.ServicePointManager]</span>::SecurityProtocol = <span class="token namespace">[System.Net.ServicePointManager]</span>::SecurityProtocol <span class="token operator">-bor</span> 3072<span class="token punctuation">;</span> <span class="token function">iex</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">New-Object</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>WebClient<span class="token punctuation">)</span><span class="token punctuation">.</span>DownloadString<span class="token punctuation">(</span><span class="token string">'https://chocolatey.org/install.ps1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>


<pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">rem cmd下运行
rem 拷贝目录
XCOPY C:\ProgramData\chocolatey D:\chocolatey
rem 系统环境变量
SETX &#x2F;M ChocolateyInstall D:\chocolatey<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="gsudo安装"><a href="#gsudo安装" class="headerlink" title="gsudo安装"></a>gsudo安装</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># github</span>
PowerShell <span class="token operator">-</span>Command <span class="token string">"Set-ExecutionPolicy RemoteSigned -scope Process; iwr -useb https://raw.githubusercontent.com/gerardog/gsudo/master/installgsudo.ps1 | iex"</span>
<span class="token comment"># gitee</span>
PowerShell <span class="token operator">-</span>Command <span class="token string">"Set-ExecutionPolicy RemoteSigned -scope Process; iwr -useb https://gitee.com/joker_gitee/gsudo/raw/master/installgsudo.ps1 | iex"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<h2 id="scoop"><a href="#scoop" class="headerlink" title="scoop"></a>scoop</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token variable">$env</span>:SCOOP=<span class="token string">'D:\Scoop'</span>
<span class="token namespace">[Environment]</span>::SetEnvironmentVariable<span class="token punctuation">(</span><span class="token string">'SCOOP'</span><span class="token punctuation">,</span><span class="token variable">$env</span>:SCOOP<span class="token punctuation">,</span><span class="token string">'Machine'</span><span class="token punctuation">)</span>
<span class="token variable">$env</span>:SCOOP_GLOBAL=<span class="token string">'D:\ScoopGlobalApps'</span>
<span class="token namespace">[Environment]</span>::SetEnvironmentVariable<span class="token punctuation">(</span><span class="token string">'SCOOP_GLOBAL'</span><span class="token punctuation">,</span><span class="token variable">$env</span>:SCOOP_GLOBAL<span class="token punctuation">,</span><span class="token string">'Machine'</span><span class="token punctuation">)</span>


<span class="token function">Set-ExecutionPolicy</span> RemoteSigned <span class="token operator">-</span>scope CurrentUser

<span class="token comment"># github 需要代理</span>
<span class="token function">Invoke-Expression</span> <span class="token punctuation">(</span><span class="token function">New-Object</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>WebClient<span class="token punctuation">)</span><span class="token punctuation">.</span>DownloadString<span class="token punctuation">(</span><span class="token string">'https://get.scoop.sh'</span><span class="token punctuation">)</span>
<span class="token comment"># 或者</span>
<span class="token function">iex</span> <span class="token punctuation">(</span><span class="token function">new-object</span> net<span class="token punctuation">.</span>webclient<span class="token punctuation">)</span><span class="token punctuation">.</span>downloadstring<span class="token punctuation">(</span><span class="token string">'https://get.scoop.sh'</span><span class="token punctuation">)</span>
scoop bucket add extras
scoop bucket add versions


<span class="token comment">## </span>
<span class="token function">iwr</span> <span class="token operator">-</span>useb raw<span class="token punctuation">.</span>fastgit<span class="token punctuation">.</span>org/ScoopInstaller/Scoop/master/bin/install<span class="token punctuation">.</span>ps1 <span class="token punctuation">|</span> <span class="token function">iex</span>
<span class="token comment">## 国内安装</span>
<span class="token comment"># gitee</span>
<span class="token function">iwr</span> <span class="token operator">-</span>useb gitee<span class="token punctuation">.</span>com/glsnames/scoop-installer/raw/master/bin/install<span class="token punctuation">.</span>ps1 <span class="token punctuation">|</span> <span class="token function">iex</span>

scoop bucket <span class="token function">rm</span> main
scoop bucket add scoopMain https:<span class="token operator">/</span><span class="token operator">/</span>gitee<span class="token punctuation">.</span>com/glsnames/scoop-main<span class="token punctuation">.</span>git
scoop bucket add my-bucket https:<span class="token operator">/</span><span class="token operator">/</span>gitee<span class="token punctuation">.</span>com/huyuwei/my-bucket<span class="token punctuation">.</span>git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">scoop config SCOOP_REPO https:&#x2F;&#x2F;gitee.com&#x2F;glsnames&#x2F;scoop-installer
scoop update
scoop bucket add my-bucket https:&#x2F;&#x2F;gitee.com&#x2F;huyuwei&#x2F;my-bucket.git


scoop install 7zip aria2

scoop config aria2-max-connection-per-server 16
scoop config aria2-split 16
scoop config aria2-min-split-size 1M
scoop config aria2-warning-enabled false
scoop config aria2-enabled true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="开启-关闭aria2加速"><a href="#开启-关闭aria2加速" class="headerlink" title="开启/关闭aria2加速"></a>开启/关闭aria2加速</h4><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">scoop config aria2-enabled false<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<pre class="line-numbers language-none"><code class="language-none">scoop bucket add main https:&#x2F;&#x2F;github.com&#x2F;ScoopInstaller&#x2F;Main.git
scoop bucket add java https:&#x2F;&#x2F;github.com&#x2F;ScoopInstaller&#x2F;Java.git
scoop bucket add php https:&#x2F;&#x2F;github.com&#x2F;ScoopInstaller&#x2F;PHP.git
scoop bucket add versions https:&#x2F;&#x2F;github.com&#x2F;ScoopInstaller&#x2F;Versions.git
scoop bucket add extras https:&#x2F;&#x2F;github.com&#x2F;lukesampson&#x2F;scoop-extras.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>软件配置</category>
      </categories>
      <tags>
        <tag>chocolaty</tag>
        <tag>scoop</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows子系统-CentOS</title>
    <url>/posts/52467/</url>
    <content><![CDATA[<h2 id="CentWSL"><a href="#CentWSL" class="headerlink" title="CentWSL"></a>CentWSL</h2><p><a href="https://github.com/wsldl-pg/CentWSL/releases">https://github.com/wsldl-pg/CentWSL/releases</a></p>
<p>解压CentOS7.zip到要安装的目录</p>
<p>双击CentOS7.exe开始安装</p>
<span id="more"></span>
<h2 id="WSL管理软件"><a href="#WSL管理软件" class="headerlink" title="WSL管理软件"></a>WSL管理软件</h2><p><a href="https://github.com/DDoSolitary/LxRunOffline/releases">https://github.com/DDoSolitary/LxRunOffline/releases</a></p>
]]></content>
      <tags>
        <tag>wsl</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows换行符配置</title>
    <url>/posts/50846/</url>
    <content><![CDATA[<h2 id="默认（使用CRLF）"><a href="#默认（使用CRLF）" class="headerlink" title="默认（使用CRLF）"></a>默认（使用CRLF）</h2><pre class="line-numbers language-none"><code class="language-none"># git默认配置
git config --global core.autocrlf true 
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>




<h2 id="使用linux一样的（LF）"><a href="#使用linux一样的（LF）" class="headerlink" title="使用linux一样的（LF）"></a>使用linux一样的（LF）</h2><pre class="line-numbers language-none"><code class="language-none">#提交时转换为LF，检出时不转换
git config --global core.autocrlf input

#拒绝提交包含混合换行符的文件
git config --global core.safecrlf true
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<span id="more"></span>
<pre class="line-numbers language-none"><code class="language-none">IDEA&#x2F;Pycharm设置使用UNIX换行符
设置File -&gt; Settings
Editor -&gt; Code Style
Line separator (for new lines) ，选择：Unix and OS X (\n)
 
对已使用Windows换行符的文件，可以使用Sublime Text打开，
View-&gt;Line Endings，选Unix，保存；
 
vscode的设置 文件-&gt;首选项-&gt;设置
搜索-&gt;Eol-&gt;设置默认行尾字符为\n

linux批量替换文件为lf
find . -type f -exec dos2unix &#123;&#125; \;


idea&#x2F;pycharm先选中项目根目录
然后点击File-File Properties-Line Separators-LF
这样能把项目中所有的文件换行符都改为LF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>windows</p>
<p><a href="https://waterlan.home.xs4all.nl/dos2unix/zh_CN/man1/dos2unix.htm#9">https://waterlan.home.xs4all.nl/dos2unix/zh_CN/man1/dos2unix.htm#9</a></p>
<p><a href="https://waterlan.home.xs4all.nl/dos2unix.html#UNIX2DOS">https://waterlan.home.xs4all.nl/dos2unix.html#UNIX2DOS</a></p>
<p>scoop install -g dos2unix</p>
<p>for /R %G in (*.py) do dos2unix “%G”</p>
<p>for /R %G in (*) do dos2unix “%G”</p>
]]></content>
  </entry>
  <entry>
    <title>brew安装及替换源</title>
    <url>/posts/844/</url>
    <content><![CDATA[<h2 id="brew安装-常规安装"><a href="#brew安装-常规安装" class="headerlink" title="brew安装-常规安装"></a>brew安装-常规安装</h2><h3 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h3><p><a href="https://brew.sh/index_zh-cn">https://brew.sh/index_zh-cn</a></p>
<span id="more"></span>
<h3 id="官网安装命令"><a href="#官网安装命令" class="headerlink" title="官网安装命令"></a>官网安装命令</h3><pre class="line-numbers language-none"><code class="language-none">ruby -e &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Homebrew&#x2F;install&#x2F;master&#x2F;install)&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="官网卸载命令"><a href="#官网卸载命令" class="headerlink" title="官网卸载命令"></a>官网卸载命令</h3><pre class="line-numbers language-none"><code class="language-none">ruby -e &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Homebrew&#x2F;install&#x2F;master&#x2F;uninstall)&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="常规安装后，更换为第三方源"><a href="#常规安装后，更换为第三方源" class="headerlink" title="常规安装后，更换为第三方源"></a>常规安装后，更换为第三方源</h3><pre class="line-numbers language-none"><code class="language-none"># 中科大源
cd &quot;$(brew --repo)&quot;
git remote set-url origin https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;brew.git
cd &quot;$(brew --repo)&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core&quot;
git remote set-url origin https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;homebrew-core.git
cd &quot;$(brew --repo)&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-cask&quot;
git remote set-url origin https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;homebrew-cask.git
brew update -v
echo &#39;export HOMEBREW_BOTTLE_DOMAIN&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;homebrew&#x2F;homebrew-bottles&#39; &gt;&gt; ~&#x2F;.zshrc
source ~&#x2F;.zshrc

# 阿里源
cd &quot;$(brew --repo)&quot;
git remote set-url origin https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;homebrew&#x2F;brew.git
cd &quot;$(brew --repo)&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core&quot;
git remote set-url origin https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;homebrew&#x2F;homebrew-core.git
brew update -v
echo &#39;export HOMEBREW_BOTTLE_DOMAIN&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;homebrew&#x2F;homebrew-bottles&#39; &gt;&gt; ~&#x2F;.zshrc
source ~&#x2F;.zshrc

# 清华源
cd &quot;$(brew --repo)&quot;
git remote set-url origin https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;homebrew&#x2F;brew.git
cd &quot;$(brew --repo)&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core&quot;
git remote set-url origin https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;homebrew&#x2F;homebrew-core.git
brew update -v
echo &#39;export HOMEBREW_BOTTLE_DOMAIN&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;homebrew&#x2F;homebrew-bottles&#39; &gt;&gt; ~&#x2F;.zshrc
source ~&#x2F;.zshrc

# 复原brew源
cd &quot;$(brew --repo)&quot;
git remote set-url origin https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;brew.git
cd &quot;$(brew --repo)&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core&quot;
git remote set-url origin https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;homebrew-core.git
# 删除zshrc HOMEBREW_BOTTLE_DOMAIN内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="brew安装-国内安装"><a href="#brew安装-国内安装" class="headerlink" title="brew安装-国内安装"></a>brew安装-国内安装</h2><p>解决常规安装太慢，或者无法安装（国内有时无法访问raw.githubusercontent.com）。以及brew update很久的问题。</p>
<pre class="line-numbers language-none"><code class="language-none">curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="国内安装"><a href="#国内安装" class="headerlink" title="国内安装"></a>国内安装</h3><pre class="line-numbers language-none"><code class="language-none"># 创建HomeBrew文件夹
sudo mkdir &#x2F;usr&#x2F;local&#x2F;Homebrew

# git clone对应源的Homebrew
sudo git clone https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;brew.git &#x2F;usr&#x2F;local&#x2F;Homebrew
# sudo git clone https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;homebrew&#x2F;brew.git &#x2F;usr&#x2F;local&#x2F;Homebrew
# sudo git clone https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;homebrew&#x2F;brew.git &#x2F;usr&#x2F;local&#x2F;Homebrew

# 创建一个快捷方式到&#x2F;usr&#x2F;local&#x2F;bin目录
sudo ln -s &#x2F;usr&#x2F;local&#x2F;Homebrew&#x2F;bin&#x2F;brew &#x2F;usr&#x2F;local&#x2F;bin&#x2F;brew

# 创建core文件夹
sudo mkdir -p &#x2F;usr&#x2F;local&#x2F;Homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core

# git clone
sudo git clone https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;homebrew-core.git &#x2F;usr&#x2F;local&#x2F;Homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core
# sudo git clone https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;homebrew&#x2F;homebrew-core.git &#x2F;usr&#x2F;local&#x2F;Homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core
# sudo git clone https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;homebrew&#x2F;homebrew-core.git &#x2F;usr&#x2F;local&#x2F;Homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core

# 获取权限 并 更新
sudo chown -R $(whoami) &#x2F;usr&#x2F;local&#x2F;Homebrew
brew update -v

# 设置环境变量
echo &#39;export HOMEBREW_BOTTLE_DOMAIN&#x3D;https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;homebrew-bottles&#39; &gt;&gt; ~&#x2F;.zshrc 
# echo &#39;export HOMEBREW_BOTTLE_DOMAIN&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;homebrew&#x2F;homebrew-bottles&#39; &gt;&gt; ~&#x2F;.zshrc
# echo &#39;export HOMEBREW_BOTTLE_DOMAIN&#x3D;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;homebrew&#x2F;homebrew-bottles&#39; &gt;&gt; ~&#x2F;.zshrc
source ~&#x2F;.zshrc

# brew cask
sudo git clone https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;homebrew-cask.git &#x2F;usr&#x2F;local&#x2F;Homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-cask<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="brew安装指定版本的软件"><a href="#brew安装指定版本的软件" class="headerlink" title="brew安装指定版本的软件"></a>brew安装指定版本的软件</h2><pre class="line-numbers language-none"><code class="language-none"># 查看信息
brew info jmeter
# 根据信息中的From
cd &quot;$(brew --repo)&quot;
cd &quot;$(brew --repo)&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core&quot;
cd &quot;$(brew --repo)&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-cask&quot;
# 找到对应commitid
git log .&#x2F;Formula&#x2F;jmeter.rb | less
# 切换对应版本的commitid
git checkout d1c22f955a754d670e5ebe69eb4d970ed4429aeb
# 查看是否切换到对应版本
cat .&#x2F;Formula&#x2F;jmeter.rb
# 安装
brew install .&#x2F;Formula&#x2F;jmeter.rb
or
brew install jmeter<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>参考网站：</p>
<p><a href="https://blog.csdn.net/u010458765/article/details/104730037/">https://blog.csdn.net/u010458765/article/details/104730037/</a></p>
<p><a href="https://www.jianshu.com/p/aadb54eac0a8">https://www.jianshu.com/p/aadb54eac0a8</a></p>
]]></content>
      <categories>
        <category>软件配置</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>fastjson序列化key乱序的问题</title>
    <url>/posts/16825/</url>
    <content><![CDATA[<h2 id="1-2-x-fastjson默认无序"><a href="#1-2-x-fastjson默认无序" class="headerlink" title="1.2.x fastjson默认无序"></a>1.2.x fastjson默认无序</h2><p>对于json object，默认情况下字段是无序的，只有数组是有序的。</p>
<span id="more"></span>
<h3 id="开发解决思路"><a href="#开发解决思路" class="headerlink" title="开发解决思路"></a>开发解决思路</h3><p>开发服务时，使用java编程，如果需要json key是有序的，可以指定为LinkedHashMap</p>
<p>方法：</p>
<ol>
<li><a href="https://github.com/alibaba/fastjson/wiki/JSONField#5-%E4%BD%BF%E7%94%A8ordinal%E6%8C%87%E5%AE%9A%E5%AD%97%E6%AE%B5%E7%9A%84%E9%A1%BA%E5%BA%8F">https://github.com/alibaba/fastjson/wiki/JSONField#5-使用ordinal指定字段的顺序</a></li>
<li>JSON.parseObject(json, Feature.OrderedField);</li>
</ol>
<h3 id="测试人员，使用Python模拟相同顺序"><a href="#测试人员，使用Python模拟相同顺序" class="headerlink" title="测试人员，使用Python模拟相同顺序"></a>测试人员，使用Python模拟相同顺序</h3><p>默认情况json object是用HashMap存储的，所以JSONObject.toString()，是依赖HashMap存储的顺序。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// JSONObject继承于JSON</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JSONObject</span> <span class="token keyword">extends</span> <span class="token class-name">JSON</span> <span class="token keyword">implements</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span><span class="token punctuation">,</span> <span class="token class-name">InvocationHandler</span>

<span class="token comment">// JSON的toJSON方法</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>javaObject <span class="token keyword">instanceof</span> <span class="token class-name">Map</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span><span class="token punctuation">)</span> javaObject<span class="token punctuation">;</span>

    <span class="token keyword">int</span> size <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Map</span> innerMap<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map <span class="token keyword">instanceof</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        innerMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>map <span class="token keyword">instanceof</span> <span class="token class-name">TreeMap</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        innerMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
        innerMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token class-name">JSONObject</span> json <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span>innerMap<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> entry <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token class-name">Object</span> key <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> jsonKey <span class="token operator">=</span> <span class="token class-name">TypeUtils</span><span class="token punctuation">.</span><span class="token function">castToString</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> jsonValue <span class="token operator">=</span> <span class="token function">toJSON</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>
        json<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>jsonKey<span class="token punctuation">,</span> jsonValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">return</span> json<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">// HashMap resize方法，默认容量为1 &lt;&lt; 4 = 16，装载大于0.75 * cap的数据时，扩容成原来的 2倍</span>
<span class="token comment">// 可以看到，key的顺序，依赖于HashMap的hash方法，和新的容量</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
  newTab<span class="token punctuation">[</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> <span class="token punctuation">(</span>newCap <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>

<span class="token comment">// HashMap hash方法</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">int</span> h<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">>>></span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>hashcode实现、unsigned_right_shitf、参考他人博客中的代码</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@staticmethod</span>
<span class="token keyword">def</span> <span class="token function">get_hash_code</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    Java hashcode function
    :param s:
    :return:
    """</span>
    h <span class="token operator">=</span> <span class="token number">0</span>
    n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> c <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
        h <span class="token operator">=</span> h <span class="token operator">+</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">31</span> <span class="token operator">**</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">)</span>
    bits <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token number">8</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>h <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token punctuation">(</span>bits <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">**</span> bits <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token punctuation">(</span>bits <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@staticmethod</span>
<span class="token keyword">def</span> <span class="token function">hashmap_size</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    根据key的长度获取Java hashmap扩容后的容量
    :param length: 
    :return: 
    """</span>
    max_cap <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">30</span>
    default_load_factor <span class="token operator">=</span> <span class="token number">0.75</span>
    default_initial_cap <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span>  <span class="token comment"># 16</span>
    new_cap <span class="token operator">=</span> default_initial_cap
    load <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>default_initial_cap <span class="token operator">*</span> default_load_factor<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>load<span class="token punctuation">,</span> max_cap<span class="token punctuation">,</span> load<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> length <span class="token operator">></span> i<span class="token punctuation">:</span>
            new_cap <span class="token operator">*=</span> <span class="token number">2</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">break</span>
    <span class="token keyword">return</span> new_cap

<span class="token decorator annotation punctuation">@staticmethod</span>
<span class="token keyword">def</span> <span class="token function">int_overflow</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">:</span>
    maxint <span class="token operator">=</span> <span class="token number">2147483647</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token operator">-</span>maxint <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&lt;=</span> val <span class="token operator">&lt;=</span> maxint<span class="token punctuation">:</span>
        val <span class="token operator">=</span> <span class="token punctuation">(</span>val <span class="token operator">+</span> <span class="token punctuation">(</span>maxint <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span>maxint <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> maxint <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token keyword">return</span> val

<span class="token decorator annotation punctuation">@staticmethod</span>
<span class="token keyword">def</span> <span class="token function">unsigned_right_shitf</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    无符号右移
    """</span>
    <span class="token comment"># 数字小于0，则转为32位无符号uint</span>
    <span class="token keyword">if</span> n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        n <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>c_uint32<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span>value
    <span class="token comment"># 正常位移位数是为正数，但是为了兼容js之类的，负数就右移变成左移好了</span>
    <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token operator">-</span>int_overflow<span class="token punctuation">(</span>n <span class="token operator">&lt;&lt;</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># print(n)</span>
    <span class="token keyword">return</span> int_overflow<span class="token punctuation">(</span>n <span class="token operator">>></span> i<span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@staticmethod</span>
<span class="token keyword">def</span> <span class="token function">hash</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    Java hashmap hash function
    :param s:
    :return:
    """</span>
    h <span class="token operator">=</span> get_hash_code<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
    <span class="token keyword">return</span> h <span class="token operator">^</span> <span class="token punctuation">(</span>unsigned_right_shitf<span class="token punctuation">(</span>h<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
  <span class="token comment"># json.loads后的字典</span>
  params <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment"># 参照Java HashMap排序key</span>
  key_list <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> k<span class="token punctuation">:</span> <span class="token punctuation">(</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token builtin">hash</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


]]></content>
  </entry>
  <entry>
    <title>git学习使用</title>
    <url>/posts/5629/</url>
    <content><![CDATA[<h2 id="学习Git命令的网站"><a href="#学习Git命令的网站" class="headerlink" title="学习Git命令的网站"></a>学习Git命令的网站</h2><p><a href="https://learngitbranching.js.org/">https://learngitbranching.js.org/</a></p>
<p><a href="https://github.com/pcottle/learnGitBranching">https://github.com/pcottle/learnGitBranching</a></p>
<h2 id="Win环境下载Git"><a href="#Win环境下载Git" class="headerlink" title="Win环境下载Git"></a>Win环境下载Git</h2><p><a href="https://git-scm.com/download/win">官网</a></p>
<p><a href="https://npm.taobao.org/mirrors/git-for-windows/">推荐-淘宝镜像地址</a></p>
<p><a href="https://git-fork.com/">界面客户端-Fork</a></p>
<span id="more"></span>

<h2 id="git常用配置"><a href="#git常用配置" class="headerlink" title="git常用配置"></a>git常用配置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 设置用户名和邮箱</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"Your Name"</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"email@example.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 避免git push时候每次都要密码</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> credential.helper wincred

<span class="token comment"># 解决git status不能显示中文</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> core.quotepath <span class="token boolean">false</span>

<span class="token comment"># 解决git log不能显示中文</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> i18n.commitencoding utf-8 <span class="token comment">#该命令表示提交命令的时候使用utf-8编码集提交</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> i18n.logoutputencoding utf-8 <span class="token comment">#该命令表示日志输出时使用utf-8编码集显示</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">LESSCHARSET</span><span class="token operator">=</span>utf-8 <span class="token comment">#设置LESS字符集为utf-8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># windows电脑设置：提交时转换为LF，检出时转换为CRLF</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> core.autocrlf <span class="token boolean">true</span>

<span class="token comment"># linux/mac电脑设置：提交时转换为LF，检出时不转换</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> core.autocrlf input

<span class="token comment"># windows开发，只在windows上运行：提交检出均不转换</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> core.autocrlf <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># git网速问题，拉取或推送超时</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> http.postBuffer <span class="token number">1048576000</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> http.lowSpeedLimit <span class="token number">0</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> http.lowSpeedTime <span class="token number">999999</span> <span class="token comment">#单位 秒</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="git文件和版本管理"><a href="#git文件和版本管理" class="headerlink" title="git文件和版本管理"></a>git文件和版本管理</h2><h3 id="git刷新忽略文件"><a href="#git刷新忽略文件" class="headerlink" title="git刷新忽略文件"></a>git刷新忽略文件</h3><pre class="line-numbers language-none"><code class="language-none"># 重置所有缓存(注意后面有个.)
git rm -r --cached .
# 重新添加(注意后面有个.)
git add .<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="git-对比"><a href="#git-对比" class="headerlink" title="git 对比"></a>git 对比</h3><p>用git diff HEAD – readme.txt命令可以查看工作区和版本库里面最新版本的区别</p>
<pre class="line-numbers language-none"><code class="language-none">git diff &lt;commit_id&gt; -- &lt;file&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="git撤销修改"><a href="#git撤销修改" class="headerlink" title="git撤销修改"></a>git撤销修改</h3><p>git add之后，但是还没有git commit的文件——工作区文件撤销修改</p>
<pre class="line-numbers language-none"><code class="language-none">git checkout -- &lt;file&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>git add并且git commit的文件——暂存区文件撤销修改</p>
<pre class="line-numbers language-none"><code class="language-none">git reset HEAD &lt;file&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="git删除文件"><a href="#git删除文件" class="headerlink" title="git删除文件"></a>git删除文件</h3><pre class="line-numbers language-none"><code class="language-none">git rm &lt;file&gt;
git commit -m &quot;xxx&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="git回滚到某个提交"><a href="#git回滚到某个提交" class="headerlink" title="git回滚到某个提交"></a>git回滚到某个提交</h3><p>用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本<br>用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本</p>
<pre class="line-numbers language-none"><code class="language-none">git reset --hard &lt;commit_id&gt;
git push origin HEAD --force<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="git远程管理"><a href="#git远程管理" class="headerlink" title="git远程管理"></a>git远程管理</h2><h3 id="git-将本地项目与远程项目相关联"><a href="#git-将本地项目与远程项目相关联" class="headerlink" title="git 将本地项目与远程项目相关联"></a>git 将本地项目与远程项目相关联</h3><pre class="line-numbers language-none"><code class="language-none">git init
git remote add origin &lt;git_address&gt;
git pull origin master
git add &lt;file&gt;
git commit -m &#39;xxx&#39;
git push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="git克隆指定分支"><a href="#git克隆指定分支" class="headerlink" title="git克隆指定分支"></a>git克隆指定分支</h3><pre class="line-numbers language-none"><code class="language-none">git clone &lt;git_address&gt; -b &lt;branch&gt; # 克隆并checkout到指定分支<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="git分支管理"><a href="#git分支管理" class="headerlink" title="git分支管理"></a>git分支管理</h2><h3 id="git创建与合并分支"><a href="#git创建与合并分支" class="headerlink" title="git创建与合并分支"></a>git创建与合并分支</h3><pre class="line-numbers language-none"><code class="language-none">git checkout -b &lt;name&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>git add xxx，git commit -m “xxx”，开发若干时间后…</p>
<pre class="line-numbers language-none"><code class="language-none">git checkout master
git merge &lt;name&gt;
git branch -d &lt;name&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>软件配置</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>go学习笔记</title>
    <url>/posts/50788/</url>
    <content><![CDATA[<p><strong>The master has failed more times than the beginner has tried.</strong></p>
<span id="more"></span>

<h1 id="ch1"><a href="#ch1" class="headerlink" title="ch1"></a>ch1</h1><h2 id="开发环境构建"><a href="#开发环境构建" class="headerlink" title="开发环境构建"></a>开发环境构建</h2><h3 id="GOPATH"><a href="#GOPATH" class="headerlink" title="GOPATH"></a>GOPATH</h3><ol>
<li><p>在1.8版本前必须设置这个环境变量</p>
</li>
<li><p>1.8版本后（含1.8）如果没有设置使用默认值</p>
<p><em>在Unix上默认为<code>$HOME/go</code>，在Windows上默认为<code>%USERPROFILE%/go</code></em></p>
<p><em>在Mac上GOPATH可以通过修改<code>~/.bash_profile</code>来设置</em></p>
</li>
</ol>
<h2 id="基本程序结构"><a href="#基本程序结构" class="headerlink" title="基本程序结构"></a>基本程序结构</h2><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main <span class="token comment">// 包，表明代码所在的模块（包）</span>
<span class="token keyword">import</span> <span class="token string">"fmt"</span> <span class="token comment">// 引入代码依赖</span>

<span class="token comment">// 功能实现</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="应用程序入口"><a href="#应用程序入口" class="headerlink" title="应用程序入口"></a>应用程序入口</h2><ol>
<li>必须是main包：<code>package main</code></li>
<li>必须是main方法：<code>func main()</code></li>
<li>目录名不一定是<code>main</code></li>
<li>文件名不一定是<code>main.go</code></li>
</ol>
<h2 id="退出返回值"><a href="#退出返回值" class="headerlink" title="退出返回值"></a>退出返回值</h2><h3 id="与其他主要编程语言的差异"><a href="#与其他主要编程语言的差异" class="headerlink" title="与其他主要编程语言的差异"></a>与其他主要编程语言的差异</h3><ul>
<li>Go中main函数不支持任何返回值</li>
<li>通过<code>os.Exit</code>来返回状态</li>
</ul>
<h2 id="获取命令行参数"><a href="#获取命令行参数" class="headerlink" title="获取命令行参数"></a>获取命令行参数</h2><h3 id="与其他主要编程语言的差异-1"><a href="#与其他主要编程语言的差异-1" class="headerlink" title="与其他主要编程语言的差异"></a>与其他主要编程语言的差异</h3><ul>
<li><p>main函数不支持传入参数</p>
<p>func main<del>(arg []string)</del></p>
</li>
<li><p>在程序中直接通过<code>os.Args</code>获取命令行参数</p>
</li>
</ul>
<h1 id="ch2"><a href="#ch2" class="headerlink" title="ch2"></a>ch2</h1><h2 id="编写测试程序"><a href="#编写测试程序" class="headerlink" title="编写测试程序"></a>编写测试程序</h2><ol>
<li>源码文件以_test结尾：<code>xxx_text.go</code></li>
<li>测试方法名以Test开头：<code>func TestXXX(t *testing.T) &#123;...&#125;</code></li>
</ol>
<h2 id="实现Fibonacci数列"><a href="#实现Fibonacci数列" class="headerlink" title="实现Fibonacci数列"></a>实现Fibonacci数列</h2><p><strong>1, 1, 2, 3, 5, 8, 13, ….</strong></p>
<h2 id="变量赋值"><a href="#变量赋值" class="headerlink" title="变量赋值"></a>变量赋值</h2><h3 id="与其他主要编程语言的差异-2"><a href="#与其他主要编程语言的差异-2" class="headerlink" title="与其他主要编程语言的差异"></a>与其他主要编程语言的差异</h3><ul>
<li>赋值可以进行自动类型推断</li>
<li>在一个赋值语句中可以对多个变量进行同时赋值</li>
</ul>
<h2 id="常量定义"><a href="#常量定义" class="headerlink" title="常量定义"></a>常量定义</h2><h3 id="与其他主要编程语言的差异-3"><a href="#与其他主要编程语言的差异-3" class="headerlink" title="与其他主要编程语言的差异"></a>与其他主要编程语言的差异</h3><h4 id="快速设置连续值"><a href="#快速设置连续值" class="headerlink" title="快速设置连续值"></a>快速设置连续值</h4><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">const</span> <span class="token punctuation">(</span>                  <span class="token keyword">const</span> <span class="token punctuation">(</span>
  Monday <span class="token operator">=</span> <span class="token boolean">iota</span> <span class="token operator">+</span> <span class="token number">1</span>        Open <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token boolean">iota</span> <span class="token comment">// 0001</span>
  Tuesday                  Close            <span class="token comment">// 0010</span>
  Wednesday                Pending          <span class="token comment">// 0100</span>
  Thursday               <span class="token punctuation">)</span>
  Friday
  Saturday
  Sunday
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="ch3"><a href="#ch3" class="headerlink" title="ch3"></a>ch3</h1><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token builtin">bool</span>
<span class="token builtin">string</span>
<span class="token builtin">int</span>		<span class="token builtin">int8</span>	<span class="token builtin">int16</span>		<span class="token builtin">int32</span>		<span class="token builtin">int64</span>
<span class="token builtin">uint</span>	<span class="token builtin">uint8</span>	<span class="token builtin">uint16</span>	<span class="token builtin">uint32</span>	<span class="token builtin">uint64</span>	<span class="token builtin">uintptr</span>
<span class="token builtin">byte</span> <span class="token comment">// alias for uint8</span>
<span class="token builtin">rune</span> <span class="token comment">// alias for int32, represents a Unicode code point</span>
<span class="token builtin">float32</span>	<span class="token builtin">float64</span>
<span class="token builtin">complex64</span> <span class="token builtin">complex128</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="类型转化"><a href="#类型转化" class="headerlink" title="类型转化"></a>类型转化</h2><h3 id="与其他主要编程语言的差异-4"><a href="#与其他主要编程语言的差异-4" class="headerlink" title="与其他主要编程语言的差异"></a>与其他主要编程语言的差异</h3><ol>
<li>Go语言不允许隐式类型转换</li>
<li>别名和原有类型也不能进行隐式类型转换</li>
</ol>
<h2 id="类型的预定义值"><a href="#类型的预定义值" class="headerlink" title="类型的预定义值"></a>类型的预定义值</h2><ol>
<li><code>math.MaxInt64</code></li>
<li><code>math.MaxFloat64</code></li>
<li><code>math.MaxUint32</code></li>
</ol>
<h2 id="指针类型"><a href="#指针类型" class="headerlink" title="指针类型"></a>指针类型</h2><h3 id="与其他主要编程语言的差异-5"><a href="#与其他主要编程语言的差异-5" class="headerlink" title="与其他主要编程语言的差异"></a>与其他主要编程语言的差异</h3><ol>
<li>不支持指针运算</li>
<li><code>string</code>是值类型，其默认的初始化值为空字符串，而不是<code>nil</code></li>
</ol>
<h1 id="ch4"><a href="#ch4" class="headerlink" title="ch4"></a>ch4</h1><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>+</td>
<td>相加</td>
<td>A + B 输出结果 30</td>
</tr>
<tr>
<td>-</td>
<td>相减</td>
<td>A - B 输出结果 -10</td>
</tr>
<tr>
<td>*</td>
<td>相乘</td>
<td>A * B 输出结果 200</td>
</tr>
<tr>
<td>/</td>
<td>相除</td>
<td>B / A 输出结果 2</td>
</tr>
<tr>
<td>%</td>
<td>求余</td>
<td>B % A 输出结果0</td>
</tr>
<tr>
<td>++</td>
<td>自增</td>
<td>A++ 输出结果 11</td>
</tr>
<tr>
<td>–</td>
<td>自减</td>
<td>A– 输出结果 9</td>
</tr>
</tbody></table>
<blockquote>
<p>Go 语言没有前置的 <code>++</code>, <code>--</code>, <del><code>(++a)</code></del></p>
</blockquote>
<h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>==</td>
<td>检查两个值是否相等，如果相等返回 True 否则返回 False。</td>
<td>(A == B) 为 False</td>
</tr>
<tr>
<td>!=</td>
<td>检查两个值是否不相等，如果不相等返回 True 否则返回 False。</td>
<td>(A != B) 为True</td>
</tr>
<tr>
<td>&gt;</td>
<td>检查左边值是否大于右边值，如果是返回 True 否则返回 False。</td>
<td>(A &gt; B) 为False</td>
</tr>
<tr>
<td>&lt;</td>
<td>检查左边值是否小于右边值，如果是返回 True 否则返回 False。</td>
<td>(A &lt; B) 为True</td>
</tr>
<tr>
<td>&gt;=</td>
<td>检查左边值是否大于等于右边值，如果是返回 True 否则返回 False。</td>
<td>(A &gt;= B) 为False</td>
</tr>
<tr>
<td>&lt;=</td>
<td>检查左边值是否小于等于右边值，如果是返回 True 否则返回 False。</td>
<td>(A &lt;= B) 为True</td>
</tr>
</tbody></table>
<h2 id="用-比较数组"><a href="#用-比较数组" class="headerlink" title="用 == 比较数组"></a>用 == 比较数组</h2><ul>
<li>相同维数且含有相同个数元素的数组才可以比较</li>
<li>每个元素都相同的才相等</li>
</ul>
<h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>&amp;&amp;</td>
<td>逻辑 AND 运算符。如果两边的操作数都是 True，则条件 True，否则为 False。</td>
<td>(A &amp;&amp; B) 为 False</td>
</tr>
<tr>
<td>||</td>
<td>逻辑 OR 运算符。如果两边的操作数有一个 True，则条件 True，否则为 False。</td>
<td>(A || B) 为 True</td>
</tr>
<tr>
<td>!</td>
<td>逻辑 NOT 运算符。如果条件为 True，则逻辑 NOT 条件 False，否则为 True。</td>
<td>!(A &amp;&amp; B) 为 True</td>
</tr>
</tbody></table>
<h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>&amp;</td>
<td>按位与运算符”&amp;”是双目运算符。其功能是参与运算的两数各对应的二进位相与。</td>
<td>(A &amp; B) 结果为 12，二进制为 0000 1100</td>
</tr>
<tr>
<td>|</td>
<td>按位或运算符”|”是双目运算符。其功能是参与运算的两数各对应的二进位相或。</td>
<td>(A | B) 结果为 61，二进制为 0011 1101</td>
</tr>
<tr>
<td>^</td>
<td>按位异或运算符”^”是双目运算符。其功能是参与运算的两数各对应的二进位相异或，当两对应的二进位相异时，结果为1。</td>
<td>(A ^ B) 结果为 49，二进制为 0011 0001</td>
</tr>
<tr>
<td>&lt;&lt;</td>
<td>左移运算符”&lt;&lt;”是双目运算符。左移n位就是乘以2的n次方。其功能把”&lt;&lt;”左边的运算数的各二进位全部左移若干位，由”&lt;&lt;”右边的数指定移动的位数，高位丢弃，低位补</td>
<td>A &lt;&lt; 2 结果为 240，二进制为 1111 0000</td>
</tr>
<tr>
<td>&gt;&gt;</td>
<td>右移运算符”&gt;&gt;”是双目运算符。右移n位就是除以2的n次方。其功能把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，”&gt;&gt;”右边的数指定移动的位数</td>
<td>A &gt;&gt; 2 结果为 15，二进制为 0000 1111</td>
</tr>
</tbody></table>
<h2 id="位运算符-1"><a href="#位运算符-1" class="headerlink" title="位运算符"></a>位运算符</h2><h3 id="与其他主要编程语言的差异-6"><a href="#与其他主要编程语言的差异-6" class="headerlink" title="与其他主要编程语言的差异"></a>与其他主要编程语言的差异</h3><h4 id="amp-按位置零"><a href="#amp-按位置零" class="headerlink" title="&amp;^按位置零"></a>&amp;^按位置零</h4><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token number">1</span> <span class="token operator">&amp;^</span> <span class="token number">0</span> <span class="token operator">--</span> <span class="token number">1</span>
<span class="token number">1</span> <span class="token operator">&amp;^</span> <span class="token number">1</span> <span class="token operator">--</span> <span class="token number">0</span>
<span class="token number">0</span> <span class="token operator">&amp;^</span> <span class="token number">1</span> <span class="token operator">--</span> <span class="token number">0</span>
<span class="token number">0</span> <span class="token operator">&amp;^</span> <span class="token number">0</span> <span class="token operator">--</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>go</category>
      </categories>
      <tags>
        <tag>go</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS逆向学习</title>
    <url>/posts/28199/</url>
    <content><![CDATA[<blockquote>
<p>《iOS应用逆向与安全之道》</p>
<p>微信读书可阅读</p>
<p>本文是阅读本书的笔记</p>
</blockquote>
<span id="more"></span>

<h2 id="实用工具"><a href="#实用工具" class="headerlink" title="实用工具"></a>实用工具</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 010-editor为收费软件</span>
brew <span class="token function">install</span> <span class="token parameter variable">--cask</span> 010-editor
brew <span class="token function">install</span> tree<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ol>
<li>010 Editor -&gt; Templates -&gt; View Installed Templates -&gt; Add</li>
<li>添加MachOTemplate.bt用于分析ARM64架构的程序</li>
</ol>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> <span class="token parameter variable">-N</span> <span class="token parameter variable">-c</span> http://www.sweetscape.com/010editor/repository/files/MachO.bt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<h2 id="应用脱壳"><a href="#应用脱壳" class="headerlink" title="应用脱壳"></a>应用脱壳</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># cryptid=1表示已加壳，cryptid=0表示未加壳</span>
otool <span class="token parameter variable">-l</span> bili-universal <span class="token operator">|</span> <span class="token function">grep</span> crypt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="Clutch"><a href="#Clutch" class="headerlink" title="Clutch"></a><a href="https://github.com/KJCracks/Clutch">Clutch</a></h3><p>傻瓜砸壳，很多应用都脱壳失败</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># mac terminal</span>
<span class="token function">wget</span> <span class="token parameter variable">-N</span> <span class="token parameter variable">-c</span> https://github.com/KJCracks/Clutch/releases/download/2.0.4/Clutch-2.0.4 <span class="token parameter variable">-O</span> Clutch
<span class="token function">scp</span> <span class="token parameter variable">-r</span> Clutch root@weideiPhone.local:/usr/bin/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># iPhone terminal</span>
<span class="token function">chmod</span> +x /usr/bin/Clutch
<span class="token comment"># 打印App Store安装的所有应用列表</span>
Clutch <span class="token parameter variable">-i</span>
<span class="token comment"># 傻瓜砸壳，很多应用都脱壳失败</span>
Clutch <span class="token parameter variable">-d</span> tv.danmaku.bilianime<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="dumpdecrypted"><a href="#dumpdecrypted" class="headerlink" title="dumpdecrypted"></a><a href="https://github.com/stefanesser/dumpdecrypted">dumpdecrypted</a></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># mac terminal</span>
<span class="token function">git</span> clone https://github.com/stefanesser/dumpdecrypted.git
<span class="token builtin class-name">cd</span> dumpdecrypted

<span class="token comment"># 删除Makefile中的-F$(SDK)/System/Library/PrivateFrameworks，然后执行make</span>
<span class="token function">make</span>

codesign <span class="token parameter variable">-f</span> <span class="token parameter variable">-s</span> - dumpdecrypted.dylib
<span class="token function">scp</span> <span class="token parameter variable">-r</span> dumpdecrypted.dylib root@weideiPhone.local:/usr/bin/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># iPhone terminal</span>
<span class="token builtin class-name">cd</span> /tmp
<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> bili
<span class="token comment"># 这里执行后dump失败了，应该是只能砸&lt; iOS 11</span>
<span class="token assign-left variable">DYLD_INSERT_LIBRARIES</span><span class="token operator">=</span>/usr/bin/dumpdecrypted.dylib /var/containers/Bundle/Application/F893C850-40BB-4C1F-8691-FB51BFAF4FC5/bili-universal.app/bili-universal<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="bfinject"><a href="#bfinject" class="headerlink" title="bfinject"></a><a href="https://github.com/BishopFox/bfinject">bfinject</a></h3><ul>
<li>iOS 11～iOS 11.1.2 <a href="https://github.com/BishopFox/bfinject">https://github.com/BishopFox/bfinject</a></li>
<li>iOS 11～iOS 11.4.1 <a href="https://github.com/MJavad/bfinject">https://github.com/MJavad/bfinject</a></li>
</ul>
<h4 id="修复闪退"><a href="#修复闪退" class="headerlink" title="修复闪退"></a>修复闪退</h4><p>如果脱壳后的ipa包安装后运行闪退，则需要稍微处理一下</p>
<pre class="line-numbers language-none"><code class="language-none">unzip xxx.ipa
codesign -d --entitlements - .&#x2F;Payload&#x2F;*.app &gt; ent.xml
codesign -s - --entitlements ent.xml -f .&#x2F;Payload&#x2F;*.app&#x2F;xxx
zip -r xxx_ok.ipa Payload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="CrackerXI（iOS-11～iOS-13）"><a href="#CrackerXI（iOS-11～iOS-13）" class="headerlink" title="CrackerXI（iOS 11～iOS 13）"></a>CrackerXI（iOS 11～iOS 13）</h3><p>2021傻瓜式，脱壳后共享到电脑</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># mac terminal</span>
<span class="token function">scp</span> <span class="token parameter variable">-r</span> root@weideiPhone.local:/var/mobile/Documents/CrackerXI/ <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="frida-ios-dump"><a href="#frida-ios-dump" class="headerlink" title="frida-ios-dump"></a><a href="https://github.com/AloneMonkey/frida-ios-dump">frida-ios-dump</a></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># mac terminal</span>
<span class="token function">git</span> clone https://github.com/AloneMonkey/frida-ios-dump<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h2 id="运行时分析"><a href="#运行时分析" class="headerlink" title="运行时分析"></a>运行时分析</h2><h3 id="Cycript"><a href="#Cycript" class="headerlink" title="Cycript"></a>Cycript</h3><p>Cydia中搜索”Cycript”安装即可</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cycript <span class="token parameter variable">-p</span> bili-universal
NSHomeDirectory<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span>UIApp keyWindow<span class="token punctuation">]</span> recursiveDescription <span class="token punctuation">]</span>.toString<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span>UIApp keyWindow<span class="token punctuation">]</span> _autolayoutTrace <span class="token punctuation">]</span>.toString<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="Reveal"><a href="#Reveal" class="headerlink" title="Reveal"></a>Reveal</h3><p>UI调试工具</p>
<p>Cydia中搜索”Reveal2Loader”安装，安装完成后会在“设置”里出现“Reveal”</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># mac terminal</span>
brew <span class="token function">install</span> <span class="token parameter variable">--cask</span> reveal <span class="token comment"># 收费软件</span>

root@weideiPhone.local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="frida"><a href="#frida" class="headerlink" title="frida"></a>frida</h3><p>被控端，添加软件源<a href="https://build.frida.re/%EF%BC%8C%E6%90%9C%E7%B4%A2%E2%80%9CFrida%E2%80%9D%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85">https://build.frida.re/，搜索“Frida”进行安装</a></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 控制端 mac terminal</span>
<span class="token function">sudo</span> pip <span class="token function">install</span> frida
<span class="token function">sudo</span> pip <span class="token function">install</span> frida-tools
frida <span class="token parameter variable">--version</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">frida-ls-devices

frida-ps

frida-trace <span class="token parameter variable">-U</span> <span class="token parameter variable">-i</span> compress <span class="token parameter variable">-i</span> <span class="token string">"recv*"</span> <span class="token parameter variable">-x</span> <span class="token string">"recvmsg*"</span> <span class="token parameter variable">-x</span> recvfrom 微信<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>iTerm2配置lrzsz</title>
    <url>/posts/8542/</url>
    <content><![CDATA[<h1 id="下载脚本"><a href="#下载脚本" class="headerlink" title="下载脚本"></a>下载脚本</h1><p>将iterm2-send-zmodem.sh &amp; iterm2-recv-zmodem.sh放到/usr/local/bin/</p>
<pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;huyuwei1996&#x2F;iterm2-zmodem.git
cd iterm2-zmodem
cp *.sh &#x2F;usr&#x2F;local&#x2F;bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<span id="more"></span>

<h1 id="配置iterm2-Trigger"><a href="#配置iterm2-Trigger" class="headerlink" title="配置iterm2 Trigger"></a>配置iterm2 Trigger</h1><p>选择Profiles &gt; Default &gt; Advanced &gt; Triggers &gt; Edit</p>
<h2 id="发送-sz"><a href="#发送-sz" class="headerlink" title="发送 sz"></a>发送 sz</h2><pre class="line-numbers language-none"><code class="language-none">Regular expression: rz waiting to receive.\*\*B0100 (注意这里是这样)
Action: Run Silent Coprocess
Parameters: &#x2F;usr&#x2F;local&#x2F;bin&#x2F;iterm2-send-zmodem.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="接收-rz"><a href="#接收-rz" class="headerlink" title="接收 rz"></a>接收 rz</h2><pre class="line-numbers language-none"><code class="language-none">Regular expression:\*\*B00000000000000
Action: Run Silent Coprocess
Parameters: &#x2F;usr&#x2F;local&#x2F;bin&#x2F;iterm2-recv-zmodem.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>软件配置</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>iTerm2</tag>
      </tags>
  </entry>
  <entry>
    <title>layui笔记</title>
    <url>/posts/47860/</url>
    <content><![CDATA[<span id="more"></span>

<h3 id="自定义表单校验"><a href="#自定义表单校验" class="headerlink" title="自定义表单校验"></a>自定义表单校验</h3><p><a href="https://www.layui.site/doc/modules/form.html#verify">https://www.layui.site/doc/modules/form.html#verify</a></p>
]]></content>
  </entry>
  <entry>
    <title>m1 mac python相关</title>
    <url>/posts/49986/</url>
    <content><![CDATA[<h1 id="Pillow"><a href="#Pillow" class="headerlink" title="Pillow"></a>Pillow</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">python3<span class="token punctuation">.</span><span class="token number">9</span> 使用pip安装
python3<span class="token punctuation">.</span><span class="token number">8</span> 使用conda安装<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h1 id="Numpy"><a href="#Numpy" class="headerlink" title="Numpy"></a>Numpy</h1><h2 id="强制安装"><a href="#强制安装" class="headerlink" title="强制安装"></a>强制安装</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">pip3 install cython <span class="token operator">-</span><span class="token operator">-</span>no<span class="token operator">-</span>use<span class="token operator">-</span>pep517
pip3 install numpy <span class="token operator">-</span><span class="token operator">-</span>no<span class="token operator">-</span>use<span class="token operator">-</span>pep517<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<span id="more"></span>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>m1</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>maven修改镜像源</title>
    <url>/posts/64718/</url>
    <content><![CDATA[<p>在conf/setting.xml文件的<code>mirrors</code>中添加以下内容</p>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>AliMaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>aliyun maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://maven.aliyun.com/nexus/content/groups/public/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span>        
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<span id="more"></span>
]]></content>
      <categories>
        <category>测试</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL学习</title>
    <url>/posts/32011/</url>
    <content><![CDATA[<h3 id="mysql8-0客户端连接报错"><a href="#mysql8-0客户端连接报错" class="headerlink" title="mysql8.0客户端连接报错"></a>mysql8.0客户端连接报错</h3><blockquote>
<p>原因: caching_sha2_password, 是mysql8.0的一个新特性, 默认使用该身份认证插件进行加密. 但是一些客户端, 诸如sequel pro, Navicat 不支持这种插件, 这个时候就会出现如上错误.</p>
</blockquote>
<span id="more"></span>

<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#修改加密规则 </span>
mysql<span class="token operator">></span> <span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">'root'</span><span class="token variable">@'localhost'</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">'password'</span> PASSWORD EXPIRE NEVER<span class="token punctuation">;</span>
Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
<span class="token comment">#更新用户密码</span>
mysql<span class="token operator">></span>  <span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">'root'</span><span class="token variable">@'localhost'</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">'password'</span><span class="token punctuation">;</span>
Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
<span class="token comment">#刷新权限</span>
mysql<span class="token operator">></span> FLUSH <span class="token keyword">PRIVILEGES</span><span class="token punctuation">;</span>
Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
<span class="token comment">#修改用户密码</span>
mysql<span class="token operator">></span> <span class="token keyword">alter</span> <span class="token keyword">user</span> <span class="token string">'root'</span><span class="token variable">@'localhost'</span> identified <span class="token keyword">by</span> <span class="token string">'要设置的账户密码'</span><span class="token punctuation">;</span>
Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="mysql5-7使用"><a href="#mysql5-7使用" class="headerlink" title="mysql5.7使用"></a>mysql5.7使用</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment"># 安装5.7版本</span>
brew install mysql<span class="token variable">@5.7</span>
<span class="token comment"># 安装完运行安全设置</span>
mysql_secure_installation
<span class="token comment"># 修改绑定地址</span>
sudo vi <span class="token operator">/</span>usr<span class="token operator">/</span><span class="token keyword">local</span><span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf

bind<span class="token operator">-</span>address <span class="token operator">=</span> <span class="token number">0.0</span><span class="token number">.0</span><span class="token number">.0</span>
<span class="token comment">#更新域属性，'%'表示允许外部访问</span>
<span class="token keyword">update</span> <span class="token keyword">user</span> <span class="token keyword">set</span> host<span class="token operator">=</span><span class="token string">'%'</span> <span class="token keyword">where</span> <span class="token keyword">user</span> <span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">;</span>
FLUSH <span class="token keyword">PRIVILEGES</span><span class="token punctuation">;</span>
<span class="token comment"># 授权</span>
<span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">'root'</span><span class="token variable">@'%'</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">'你的密码'</span> <span class="token keyword">WITH</span> <span class="token keyword">GRANT</span> <span class="token keyword">OPTION</span><span class="token punctuation">;</span>
<span class="token comment"># 重启</span>
brew services restart mysql<span class="token variable">@5.7</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>SQL教程：<a href="https://www.w3school.com.cn/sql/index.asp">W3school</a></p>
<p>SQL练习网站：<a href="https://sqlbolt.com/">https://sqlbolt.com</a></p>
<p>Sequel Pro：<a href="https://sequelpro.com/test-builds">https://sequelpro.com/test-builds</a></p>
]]></content>
      <categories>
        <category>测试</category>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>oh-my-zsh安装</title>
    <url>/posts/29706/</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="https://github.com/ohmyzsh/ohmyzsh">https://github.com/ohmyzsh/ohmyzsh</a></p>
<span id="more"></span>

<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><ol>
<li>zsh安装</li>
<li>oh-my-zsh安装、高亮&amp;自动补全插件安装</li>
<li>autojump插件安装<h2 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h2>MacOS:<br>mac自带zsh</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ohmyzsh&#x2F;ohmyzsh&#x2F;master&#x2F;tools&#x2F;install.sh)&quot;

git clone https:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-autosuggestions $&#123;ZSH_CUSTOM:-~&#x2F;.oh-my-zsh&#x2F;custom&#125;&#x2F;plugins&#x2F;zsh-autosuggestions
git clone https:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~&#x2F;.oh-my-zsh&#x2F;custom&#125;&#x2F;plugins&#x2F;zsh-syntax-highlighting

brew install autojump

sed -i &quot;&quot; &quot;s&#x2F;plugins&#x3D;(git)&#x2F;plugins&#x3D;(git zsh-autosuggestions zsh-syntax-highlighting autojump)&#x2F;g&quot; ~&#x2F;.zshrc
source ~&#x2F;.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Ubuntu:</p>
<pre class="line-numbers language-none"><code class="language-none">sudo apt update -y
sudo apt install zsh -y
sudo apt install git -y

sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ohmyzsh&#x2F;ohmyzsh&#x2F;master&#x2F;tools&#x2F;install.sh)&quot;

git clone https:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-autosuggestions $&#123;ZSH_CUSTOM:-~&#x2F;.oh-my-zsh&#x2F;custom&#125;&#x2F;plugins&#x2F;zsh-autosuggestions
git clone https:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~&#x2F;.oh-my-zsh&#x2F;custom&#125;&#x2F;plugins&#x2F;zsh-syntax-highlighting

sudo apt install autojump -y

sed -i &quot;s&#x2F;plugins&#x3D;(git)&#x2F;plugins&#x3D;(git zsh-autosuggestions zsh-syntax-highlighting autojump)&#x2F;g&quot; ~&#x2F;.zshrc
source ~&#x2F;.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>CentOS:</p>
<pre class="line-numbers language-none"><code class="language-none">sudo yum update -y
sudo yum install zsh -y
sudo yum install git -y

sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ohmyzsh&#x2F;ohmyzsh&#x2F;master&#x2F;tools&#x2F;install.sh)&quot;

git clone https:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-autosuggestions $&#123;ZSH_CUSTOM:-~&#x2F;.oh-my-zsh&#x2F;custom&#125;&#x2F;plugins&#x2F;zsh-autosuggestions
git clone https:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~&#x2F;.oh-my-zsh&#x2F;custom&#125;&#x2F;plugins&#x2F;zsh-syntax-highlighting

sudo yum install -y autojump-zsh

sed -i &quot;s&#x2F;plugins&#x3D;(git)&#x2F;plugins&#x3D;(git zsh-autosuggestions zsh-syntax-highlighting autojump)&#x2F;g&quot; ~&#x2F;.zshrc
source ~&#x2F;.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="访问raw-githubusercontent-com-404时"><a href="#访问raw-githubusercontent-com-404时" class="headerlink" title="访问raw.githubusercontent.com 404时"></a>访问raw.githubusercontent.com 404时</h2><h3 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h3><pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;ohmyzsh&#x2F;ohmyzsh.git ~&#x2F;.oh-my-zsh
# 如果已存在~&#x2F;.zshrc文件需要额外执行下面这句
# cp ~&#x2F;.zshrc ~&#x2F;.zshrc.orig
cp ~&#x2F;.oh-my-zsh&#x2F;templates&#x2F;zshrc.zsh-template ~&#x2F;.zshrc
chsh -s $(which zsh)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><pre class="line-numbers language-none"><code class="language-none"># 如果没有切换shell成功
chsh -s $(which zsh)
# 常显主机名hostname
echo &quot;PROMPT&#x3D;%m\ \$PROMPT&quot; &gt;&gt; .zshrc
# 常显用户名username和主机名hostname
echo &quot;PROMPT&#x3D;\$USER@%m\ \$PROMPT&quot; &gt;&gt; .zshrc
# 生效
source .zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>软件配置</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>Zsh美化</tag>
      </tags>
  </entry>
  <entry>
    <title>prometheus监控系列</title>
    <url>/posts/5674/</url>
    <content><![CDATA[<h2 id="prometheus-amp-exporters"><a href="#prometheus-amp-exporters" class="headerlink" title="prometheus &amp; exporters"></a>prometheus &amp; exporters</h2><p>官网</p>
<p><a href="https://prometheus.io/docs/introduction/overview/">https://prometheus.io/docs/introduction/overview/</a></p>
<p>exporters</p>
<p><a href="https://prometheus.io/docs/instrumenting/exporters/">https://prometheus.io/docs/instrumenting/exporters/</a></p>
<span id="more"></span>

<h2 id="k8s各pod监控"><a href="#k8s各pod监控" class="headerlink" title="k8s各pod监控"></a>k8s各pod监控</h2><p>监控组件</p>
<p><a href="https://github.com/kubernetes/kube-state-metrics">https://github.com/kubernetes/kube-state-metrics</a></p>
<p>grafana仪表盘</p>
<p><a href="https://github.com/kubernetes-monitoring/kubernetes-mixin">https://github.com/kubernetes-monitoring/kubernetes-mixin</a></p>
<blockquote>
<p><a href="https://hub.fastgit.org/kubernetes/kube-state-metrics">https://hub.fastgit.org/kubernetes/kube-state-metrics</a></p>
<p><a href="https://hub.fastgit.org/kubernetes-monitoring/kubernetes-mixin">https://hub.fastgit.org/kubernetes-monitoring/kubernetes-mixin</a></p>
</blockquote>
<p>node exporter常用仪表盘</p>
<p><a href="https://github.com/starsliao/Prometheus">https://github.com/starsliao/Prometheus</a></p>
<blockquote>
<p><a href="https://hub.fastgit.org/starsliao/Prometheus">https://hub.fastgit.org/starsliao/Prometheus</a></p>
</blockquote>
<h2 id="使用python开发expoters"><a href="#使用python开发expoters" class="headerlink" title="使用python开发expoters"></a>使用python开发expoters</h2><p><a href="https://github.com/prometheus/client_python#exporting-to-a-pushgateway">https://github.com/prometheus/client_python#exporting-to-a-pushgateway</a></p>
<blockquote>
<p><a href="https://hub.fastgit.org/prometheus/client_python#exporting-to-a-pushgateway">https://hub.fastgit.org/prometheus/client_python#exporting-to-a-pushgateway</a></p>
</blockquote>
<h1 id="k8s中配置Prometheus监控采集规则"><a href="#k8s中配置Prometheus监控采集规则" class="headerlink" title="k8s中配置Prometheus监控采集规则"></a>k8s中配置Prometheus监控采集规则</h1><p><a href="https://help.aliyun.com/document_detail/143249.html">https://help.aliyun.com/document_detail/143249.html</a></p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>k8s</tag>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>pyopenssl解析国密证书</title>
    <url>/posts/46738/</url>
    <content><![CDATA[<h3 id="获取算法名称"><a href="#获取算法名称" class="headerlink" title="获取算法名称"></a>获取算法名称</h3><span id="more"></span>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">get_signature_algorithm</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    Return the signature algorithm used in the certificate.

    :return: The name of the algorithm.
    :rtype: :py:class:`bytes`

    :raises ValueError: If the signature algorithm is undefined.

    .. versionadded:: 0.13
    """</span>
    algor <span class="token operator">=</span> _lib<span class="token punctuation">.</span>X509_get0_tbs_sigalg<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_x509<span class="token punctuation">)</span>
    nid <span class="token operator">=</span> _lib<span class="token punctuation">.</span>OBJ_obj2nid<span class="token punctuation">(</span>algor<span class="token punctuation">.</span>algorithm<span class="token punctuation">)</span>
    <span class="token keyword">if</span> nid <span class="token operator">==</span> _lib<span class="token punctuation">.</span>NID_undef<span class="token punctuation">:</span>
        <span class="token comment"># https://bugs.python.org/issue30502</span>
        <span class="token comment"># 这里用Python3.7 会找不到OBJ_obj2txt，换Python3.8或3.9就可以</span>
        buf <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> _lib<span class="token punctuation">.</span>OBJ_obj2txt<span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">,</span> algor<span class="token punctuation">.</span>algorithm<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> buf
        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">"Undefined signature algorithm"</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> _ffi<span class="token punctuation">.</span>string<span class="token punctuation">(</span>_lib<span class="token punctuation">.</span>OBJ_nid2ln<span class="token punctuation">(</span>nid<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>修改后可以返回<code>b&#39;SM2-with-SM3&#39;</code></p>
<blockquote>
<p>转载：<a href="https://blog.csdn.net/javajiawei/article/details/116569515">https://blog.csdn.net/javajiawei/article/details/116569515</a></p>
</blockquote>
<blockquote>
<p>其他资料：<a href="https://bugs.python.org/issue30502">https://bugs.python.org/issue30502</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>sonarqube使用</title>
    <url>/posts/46893/</url>
    <content><![CDATA[<h2 id="pgsql配置"><a href="#pgsql配置" class="headerlink" title="pgsql配置"></a>pgsql配置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 我使用scoop安装后，管理员是postgres，密码为空，连接pgsql</span>
psql <span class="token parameter variable">-U</span> postgres

<span class="token assign-left variable">postgres</span><span class="token operator">=</span><span class="token comment"># create user sonarqube with password 'sonarqube';</span>
CREATE ROLE
<span class="token assign-left variable">postgres</span><span class="token operator">=</span><span class="token comment"># create database sonarqube owner sonarqube;</span>
CREATE DATABASE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>如果已有数据库，授权的话使用</p>
<p><code>grant all on database test to username;</code></p>
<span id="more"></span>

<h2 id="sonar配置"><a href="#sonar配置" class="headerlink" title="sonar配置"></a>sonar配置</h2><p>修改sonar.properties文件</p>
<pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">sonar.jdbc.username</span><span class="token punctuation">=</span><span class="token value attr-value">sonarqube</span>
<span class="token key attr-name">sonar.jdbc.password</span><span class="token punctuation">=</span><span class="token value attr-value">sonarqube</span>
<span class="token key attr-name">sonar.jdbc.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:postgresql://localhost/sonarqube?currentSchema=public</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h2 id="windows下安装为系统服务"><a href="#windows下安装为系统服务" class="headerlink" title="windows下安装为系统服务"></a>windows下安装为系统服务</h2><p><code>wrapper.exe -i ..\..\conf\wrapper.conf</code></p>
<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>多分支扫描插件</p>
<p><code>-D&quot;sonar.branch.name=master&quot;</code></p>
<p>地址：<a href="https://github.com/mc1arke/sonarqube-community-branch-plugin">https://github.com/mc1arke/sonarqube-community-branch-plugin</a></p>
<p>加速地址：<a href="https://hub.fastgit.org/mc1arke/sonarqube-community-branch-plugin">https://hub.fastgit.org/mc1arke/sonarqube-community-branch-plugin</a></p>
<p><code>sonar.properties</code>文件修改如下</p>
<p><code>sonar.web.javaAdditionalOpts=-javaagent:./extensions/plugins/sonarqube-community-branch-plugin-1.8.1.jar=web</code></p>
<p><code>sonar.ce.javaAdditionalOpts=-javaagent:./extensions/plugins/sonarqube-community-branch-plugin-1.8.1.jar=ce</code></p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>sonarqube</tag>
        <tag>postgres</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows系统命令</title>
    <url>/posts/33480/</url>
    <content><![CDATA[<h2 id="进程查找和结束"><a href="#进程查找和结束" class="headerlink" title="进程查找和结束"></a>进程查找和结束</h2><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">tasklist

tasklist &#x2F;F &#x2F;PID &lt;pid&gt;
taskkill &#x2F;F &#x2F;IM &lt;process_name&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<h2 id="进程详细信息查看"><a href="#进程详细信息查看" class="headerlink" title="进程详细信息查看"></a>进程详细信息查看</h2><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">wmic process

wmic process get Name,ProcessId,CommandLine &#x2F;value <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<h2 id="windows系统设置支持长路径"><a href="#windows系统设置支持长路径" class="headerlink" title="windows系统设置支持长路径"></a>windows系统设置支持长路径</h2><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">reg query HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem -v LongPathsEnabled

reg add HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem -v LongPathsEnabled -t REG_DWORD &#x2F;d 00000001 &#x2F;f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<span id="more"></span>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>云原生之CNCF</title>
    <url>/posts/15624/</url>
    <content><![CDATA[<h3 id="云原生开源项目全景图"><a href="#云原生开源项目全景图" class="headerlink" title="云原生开源项目全景图"></a>云原生开源项目全景图</h3><p><a href="https://landscape.cncf.io/">https://landscape.cncf.io/</a></p>
<span id="more"></span>]]></content>
      <categories>
        <category>微服务</category>
      </categories>
      <tags>
        <tag>CNCF</tag>
      </tags>
  </entry>
  <entry>
    <title>分布式追踪之opentelemetry</title>
    <url>/posts/62015/</url>
    <content><![CDATA[<p><a href="https://github.com/open-telemetry/docs-cn/blob/main/OT.md">Opentelemetry介绍</a></p>
<span id="more"></span>

<p>OpenTelemetry（<a href="https://opentelemetry.io/docs/">OpenTelemetry官方文档</a>）统一数据采集和标准规范，目前推荐使用Prometheus + Grafana做Metrics存储、展示，使用Jaeger（<a href="https://www.jaegertracing.io/docs/latest/getting-started/">Jaeger官方文档</a>）做分布式跟踪的存储和展示</p>
<blockquote>
<p>选自他人博客：<a href="https://www.cnblogs.com/charlieroro/p/13883602.html">Opentelemetry Collector的配置和使用 </a></p>
</blockquote>
<blockquote>
<p>操作环境：k8s v1.16.15</p>
</blockquote>
<h2 id="kubectl部署"><a href="#kubectl部署" class="headerlink" title="kubectl部署"></a>kubectl部署</h2><p><a href="https://medium.com/opentelemetry/using-opentelemetry-auto-instrumentation-agents-in-kubernetes-869ec0f42377">官方博客</a></p>
<p><a href="https://help.aliyun.com/document_detail/378116.html">阿里云帮助中心-安装OpenTelemetry探针</a></p>
<h3 id="部署opentelemetry-operator"><a href="#部署opentelemetry-operator" class="headerlink" title="部署opentelemetry-operator"></a>部署opentelemetry-operator</h3><p><a href="https://github.com/open-telemetry/opentelemetry-operator">https://github.com/open-telemetry/opentelemetry-operator</a></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply <span class="token parameter variable">-f</span> https://github.com/jetstack/cert-manager/releases/download/v1.6.1/cert-manager.yaml

<span class="token function">wget</span> https://github.com/open-telemetry/opentelemetry-operator/releases/download/v0.43.0/opentelemetry-operator.yaml

<span class="token comment"># 我这里k8s版本为v1.16.15，所以admissionReviewVersions,修改v1 => v1beta1</span>

kubectl apply <span class="token parameter variable">-f</span> opentelemetry-operator.yaml

<span class="token function">docker</span> pull kubesphere/kube-rbac-proxy:v0.8.0
<span class="token function">docker</span> tag kubesphere/kube-rbac-proxy:v0.8.0 gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="部署opentelemetry-collector"><a href="#部署opentelemetry-collector" class="headerlink" title="部署opentelemetry-collector"></a>部署opentelemetry-collector</h3><p><a href="https://opentelemetry.io/docs/collector/configuration/">官方文档-Collector配置</a></p>
<p><a href="https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter">contrib配置</a></p>
<p><code>vim collector.yaml</code></p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Namespace
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> opentelemetry
<span class="token punctuation">---</span>
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> opentelemetry.io/v1alpha1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> OpenTelemetryCollector
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> opentelemetry
  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> opentelemetry
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">image</span><span class="token punctuation">:</span> otel/opentelemetry<span class="token punctuation">-</span>collector<span class="token punctuation">-</span>contrib<span class="token punctuation">:</span>latest
  <span class="token key atrule">config</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:
      # batch:</span>

    <span class="token key atrule">exporters</span><span class="token punctuation">:</span>
      <span class="token key atrule">logging</span><span class="token punctuation">:</span>
      <span class="token key atrule">jaeger</span><span class="token punctuation">:</span>
        <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> jaeger<span class="token punctuation">-</span>collector.observability<span class="token punctuation">:</span><span class="token number">14250</span>
        <span class="token key atrule">tls</span><span class="token punctuation">:</span>
          <span class="token key atrule">insecure</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">prometheus</span><span class="token punctuation">:</span>
        <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> <span class="token string">"localhost:8889"</span>
        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> <span class="token string">"default"</span>

    <span class="token key atrule">service</span><span class="token punctuation">:</span>
      <span class="token key atrule">pipelines</span><span class="token punctuation">:</span>
        <span class="token key atrule">traces</span><span class="token punctuation">:</span>
          <span class="token key atrule">receivers</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>otlp<span class="token punctuation">]</span>
          <span class="token key atrule">processors</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
          <span class="token key atrule">exporters</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>jaeger<span class="token punctuation">]</span>
        <span class="token key atrule">logs</span><span class="token punctuation">:</span>
          <span class="token key atrule">receivers</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>otlp<span class="token punctuation">]</span>
          <span class="token key atrule">exporters</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>logging<span class="token punctuation">]</span>
        <span class="token key atrule">metrics</span><span class="token punctuation">:</span>
          <span class="token key atrule">receivers</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>otlp<span class="token punctuation">]</span>
          <span class="token key atrule">exporters</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>prometheus<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><code>kubectl apply -f collector.yaml</code></p>
<h3 id="部署Auto-Instrumentation"><a href="#部署Auto-Instrumentation" class="headerlink" title="部署Auto-Instrumentation"></a>部署Auto-Instrumentation</h3><p><a href="https://opentelemetry.io/docs/instrumentation/java/automatic/">OpenTelemetry Java Automatic Instrumentation</a></p>
<p><a href="https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/main/docs/agent-config.md">Agent配置</a>（Manual Instrumentation参考<a href="https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/sdk-environment-variables.md">SDK配置</a>）</p>
<p><a href="https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/main/docs/supported-libraries.md">支持的组件库</a></p>
<p><code>vim instrumentation.yaml</code></p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> opentelemetry.io/v1alpha1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Instrumentation
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>instrumentation
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">exporter</span><span class="token punctuation">:</span>
    <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//otel<span class="token punctuation">-</span>collector.observability<span class="token punctuation">:</span><span class="token number">4317</span>
  <span class="token key atrule">propagators</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> tracecontext
    <span class="token punctuation">-</span> baggage
    <span class="token punctuation">-</span> b3
  <span class="token key atrule">sampler</span><span class="token punctuation">:</span>
    <span class="token key atrule">type</span><span class="token punctuation">:</span> parentbased_traceidratio
    <span class="token key atrule">argument</span><span class="token punctuation">:</span> <span class="token number">1</span>
  <span class="token key atrule">java</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> ghcr.io/open<span class="token punctuation">-</span>telemetry/opentelemetry<span class="token punctuation">-</span>operator/autoinstrumentation<span class="token punctuation">-</span>java<span class="token punctuation">:</span>latest
  <span class="token key atrule">nodejs</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> ghcr.io/open<span class="token punctuation">-</span>telemetry/opentelemetry<span class="token punctuation">-</span>operator/autoinstrumentation<span class="token punctuation">-</span>nodejs<span class="token punctuation">:</span>latest
  <span class="token key atrule">python</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> ghcr.io/open<span class="token punctuation">-</span>telemetry/opentelemetry<span class="token punctuation">-</span>operator/autoinstrumentation<span class="token punctuation">-</span>python<span class="token punctuation">:</span>latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><code>kubectl apply -f instrumentation.yaml</code></p>
<h3 id="Instrumentation注入"><a href="#Instrumentation注入" class="headerlink" title="Instrumentation注入"></a>Instrumentation注入</h3><h5 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h5><p>my-instrumentation和需要注入的服务需要在统一命名空间，然后使用以下注解进行准入控制</p>
<p><code>instrumentation.opentelemetry.io/inject-java: &#39;true&#39;</code></p>
<ul>
<li>“true” - Instrumentation-从命名空间注入和资源。</li>
<li>“my-instrumentation”- InstrumentationCR 实例的名称。</li>
<li>“false”- 不要注入</li>
</ul>
<p>kubectl patch deployment xxx -p ‘{“spec”: {“template”: {“metadata”: {“annotations”: {“instrumentation.opentelemetry.io/inject-java”: “true”}}}}}’</p>
<h5 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h5><p><a href="https://github.com/open-telemetry/opentelemetry-python/tree/main/docs">Github-Docs</a></p>
<p><code>instrumentation.opentelemetry.io/inject-python: &#39;true&#39;</code></p>
<p><a href="https://opentelemetry-python.readthedocs.io/en/latest/index.html">https://opentelemetry-python.readthedocs.io/en/latest/index.html</a></p>
<p><a href="https://opentelemetry-python-contrib.readthedocs.io/en/latest/index.html">https://opentelemetry-python-contrib.readthedocs.io/en/latest/index.html</a></p>
<h3 id="部署jaeger-operator"><a href="#部署jaeger-operator" class="headerlink" title="部署jaeger-operator"></a>部署jaeger-operator</h3><p><a href="https://github.com/jaegertracing/jaeger-operator">https://github.com/jaegertracing/jaeger-operator</a></p>
<pre class="line-numbers language-none"><code class="language-none">kubectl create namespace observability
kubectl create -f https:&#x2F;&#x2F;github.com&#x2F;jaegertracing&#x2F;jaeger-operator&#x2F;releases&#x2F;download&#x2F;v1.31.0&#x2F;jaeger-operator.yaml -n observability<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="部署jaeger"><a href="#部署jaeger" class="headerlink" title="部署jaeger"></a>部署jaeger</h3><p><a href="https://www.jaegertracing.io/docs/1.18/opentelemetry/">https://www.jaegertracing.io/docs/1.18/opentelemetry/</a></p>
<p><a href="https://github.com/jaegertracing/jaeger-operator/tree/main/examples">https://github.com/jaegertracing/jaeger-operator/tree/main/examples</a></p>
<pre class="line-numbers language-none"><code class="language-none">apiVersion: jaegertracing.io&#x2F;v1
kind: Jaeger
metadata:
  name: jaeger
  namespace: observability
spec:
  ingress:
#    enabled: false
    enabled: true
    hosts:
      - jaeger.xxx.com
  storage:
    type: elasticsearch
    options:
      es:
        server-urls: http:&#x2F;&#x2F;elasticsearch-master.istio-system:9200
  query:
#    serviceType: NodePort
    options:
      max-clock-skew-adjustment: &#39;0s&#39;
  sampling:
    options:
      default_strategy:
        type: probabilistic
        param: 0.5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Helm部署Grafana-loki"><a href="#Helm部署Grafana-loki" class="headerlink" title="Helm部署Grafana loki"></a>Helm部署Grafana loki</h2><p>[1]利用Opentelemetry+Loki+Temp+Granafa构建端到端的可观测平台：</p>
<p><a href="https://juejin.cn/post/7050134410229710884">https://juejin.cn/post/7050134410229710884</a></p>
<p>[2]我的使用版本：0.45.0</p>
<p><a href="https://github.com/grafana/helm-charts/tree/main/charts/loki-stack">https://github.com/grafana/helm-charts/tree/main/charts/loki-stack</a></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helm repo <span class="token function">add</span> grafana https://grafana.github.io/helm-charts
helm repo update

helm <span class="token function">install</span> <span class="token parameter variable">-n</span> loki loki grafana/loki-stack <span class="token parameter variable">--set</span> <span class="token assign-left variable">grafana.enabled</span><span class="token operator">=</span>false,prometheus.enabled<span class="token operator">=</span>false,prometheus.alertmanager.persistentVolume.enabled<span class="token operator">=</span>false,prometheus.server.persistentVolume.enabled<span class="token operator">=</span>false,loki.persistence.enabled<span class="token operator">=</span>true,loki.persistence.storageClassName<span class="token operator">=</span>loki-db,loki.persistence.size<span class="token operator">=</span>10Gi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p><a href="https://grafana.com/docs/tempo/latest/getting-started/">https://grafana.com/docs/tempo/latest/getting-started/</a></p>
<h2 id="Helm部署Tempo（可选）"><a href="#Helm部署Tempo（可选）" class="headerlink" title="Helm部署Tempo（可选）"></a>Helm部署Tempo（可选）</h2><ul>
<li><a href="https://github.com/grafana/helm-charts/tree/main/charts/tempo">single binary</a></li>
<li><a href="https://github.com/grafana/helm-charts/tree/main/charts/tempo-distributed">microservices</a></li>
</ul>
<p><a href="https://github.com/grafana/tempo/tree/main/example/helm">https://github.com/grafana/tempo/tree/main/example/helm</a></p>
<pre class="line-numbers language-none"><code class="language-none">helm upgrade --install tempo grafana&#x2F;tempo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><a href="https://www.cnblogs.com/centos-python/articles/14743546.html?ivk_sa=1024320u">https://www.cnblogs.com/centos-python/articles/14743546.html?ivk_sa=1024320u</a></p>
<p>Grafana设置：</p>
<ul>
<li>Datasource</li>
<li>Loki</li>
<li>Derived fields</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">TraceID
(?:trace_id)&#x3D;(\w+)
$&#123;__value.raw&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h2 id="Helm-安装"><a href="#Helm-安装" class="headerlink" title="Helm 安装"></a>Helm 安装</h2><h3 id="opentelemety-operator"><a href="#opentelemety-operator" class="headerlink" title="opentelemety-operator"></a>opentelemety-operator</h3><blockquote>
<p><strong>admissionWebhooks安装有问题，待研究</strong></p>
</blockquote>
<p><a href="https://github.com/open-telemetry/opentelemetry-helm-charts">https://github.com/open-telemetry/opentelemetry-helm-charts</a></p>
<p>value.yaml参考：</p>
<p><a href="https://github.com/open-telemetry/opentelemetry-helm-charts/tree/main/charts/opentelemetry-operator">https://github.com/open-telemetry/opentelemetry-helm-charts/tree/main/charts/opentelemetry-operator</a></p>
<blockquote>
<p>参考网上教程生成自签名证书<br>域名：<br>opentelemetry-operator-webhook-service.istio-system.svc</p>
</blockquote>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl create secret tls opentelemetry-operator-controller-manager-service-cert <span class="token punctuation">\</span>
    <span class="token parameter variable">--cert</span><span class="token operator">=</span>opentelemetry-operator-webhook-service.istio-system.svc/opentelemetry-operator-webhook-service.istio-system.svc.crt <span class="token punctuation">\</span>
    <span class="token parameter variable">--key</span><span class="token operator">=</span>opentelemetry-operator-webhook-service.istio-system.svc/opentelemetry-operator-webhook-service.istio-system.svc.key <span class="token punctuation">\</span>
    <span class="token parameter variable">-n</span> istio-system

helm repo <span class="token function">add</span> open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts
helm repo update

<span class="token function">git</span> clone https://github.com/open-telemetry/opentelemetry-helm-charts
<span class="token comment"># 我这里k8s版本为v1.16.15，所以admissionReviewVersions,修改v1 => v1beta1</span>

helm <span class="token function">install</span> opentelemetry-operator opentelemetry-helm-charts/charts/opentelemetry-operator <span class="token parameter variable">-n</span> istio-system <span class="token parameter variable">--set</span> <span class="token assign-left variable">manager.image.tag</span><span class="token operator">=</span>v0.43.0 <span class="token parameter variable">--set</span> <span class="token assign-left variable">kubeRBACProxy.image.repository</span><span class="token operator">=</span>kubesphere/kube-rbac-proxy <span class="token parameter variable">--set</span> <span class="token assign-left variable">admissionWebhooks.certManager.enabled</span><span class="token operator">=</span>false 

kubectl get MutatingWebhookConfiguration opentelemetry-operator-mutating-webhook-configuration<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="opentelemety-collector"><a href="#opentelemety-collector" class="headerlink" title="opentelemety-collector"></a>opentelemety-collector</h3><p><a href="https://github.com/open-telemetry/opentelemetry-helm-charts/tree/main/charts/opentelemetry-collector">https://github.com/open-telemetry/opentelemetry-helm-charts/tree/main/charts/opentelemetry-collector</a></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl create ns observability

helm <span class="token function">install</span> opentelemetry-collector open-telemetry/opentelemetry-collector <span class="token parameter variable">-n</span> observability <span class="token parameter variable">-f</span> my-values.yaml <span class="token parameter variable">--set</span> <span class="token assign-left variable">image.tag</span><span class="token operator">=</span><span class="token number">0.46</span>.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h3 id="jaeger-operator"><a href="#jaeger-operator" class="headerlink" title="jaeger-operator"></a>jaeger-operator</h3><p><a href="https://github.com/jaegertracing/helm-charts">https://github.com/jaegertracing/helm-charts</a></p>
<p>value.yaml参考：</p>
<p><a href="https://github.com/jaegertracing/helm-charts/tree/main/charts/jaeger-operator">https://github.com/jaegertracing/helm-charts/tree/main/charts/jaeger-operator</a></p>
<p>k8s v1.16 使用jaeger-operator-2.22.0</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helm repo <span class="token function">add</span> jaegertracing https://jaegertracing.github.io/helm-charts
helm repo update

helm <span class="token function">install</span> jaeger-operator jaegertracing/jaeger-operator <span class="token parameter variable">-n</span> istio-system <span class="token parameter variable">--set</span> <span class="token assign-left variable">image.tag</span><span class="token operator">=</span><span class="token number">1.22</span>.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="jaeger"><a href="#jaeger" class="headerlink" title="jaeger"></a>jaeger</h3><p><a href="https://github.com/jaegertracing/helm-charts/tree/main/charts/jaeger">https://github.com/jaegertracing/helm-charts/tree/main/charts/jaeger</a></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helm <span class="token function">install</span> jaeger jaegertracing/jaeger <span class="token parameter variable">-n</span> observability <span class="token parameter variable">--set</span> <span class="token assign-left variable">provisionDataStore.cassandra</span><span class="token operator">=</span>false <span class="token parameter variable">--set</span> <span class="token assign-left variable">storage.type</span><span class="token operator">=</span>elasticsearch  <span class="token parameter variable">--set</span> <span class="token assign-left variable">storage.elasticsearch.host</span><span class="token operator">=</span>elasticsearch-master.istio-system <span class="token parameter variable">--set</span> <span class="token assign-left variable">storage.elasticsearch.port</span><span class="token operator">=</span><span class="token number">9200</span> <span class="token parameter variable">--values</span> my-values.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

]]></content>
      <categories>
        <category>微服务</category>
      </categories>
      <tags>
        <tag>APM</tag>
        <tag>opentelemetry</tag>
      </tags>
  </entry>
  <entry>
    <title>云原生网关</title>
    <url>/posts/62548/</url>
    <content><![CDATA[<h3 id="ambassador（emissary-ingress）"><a href="#ambassador（emissary-ingress）" class="headerlink" title="ambassador（emissary-ingress）"></a>ambassador（emissary-ingress）</h3><p>官网：<a href="https://www.getambassador.io/docs/emissary/">https://www.getambassador.io/docs/emissary/</a></p>
<p>github：<a href="https://github.com/emissary-ingress/emissary">https://github.com/emissary-ingress/emissary</a></p>
<span id="more"></span>]]></content>
      <categories>
        <category>微服务</category>
      </categories>
      <tags>
        <tag>ambassador</tag>
        <tag>emissary-ingress</tag>
      </tags>
  </entry>
  <entry>
    <title>分布式追踪之skywalking</title>
    <url>/posts/6730/</url>
    <content><![CDATA[<p><a href="https://skywalking.apache.org/docs/main/latest/readme/">Skywalking官方文档</a></p>
<span id="more"></span>

<p><a href="https://github.com/apache/skywalking">github</a></p>
<h2 id="Deploy-SkyWalking-backend-and-UI-in-kubernetes"><a href="#Deploy-SkyWalking-backend-and-UI-in-kubernetes" class="headerlink" title="Deploy SkyWalking backend and UI in kubernetes"></a>Deploy SkyWalking backend and UI in kubernetes</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helm repo <span class="token function">add</span> skywalking https://apache.jfrog.io/artifactory/skywalking-helm
helm upgrade <span class="token parameter variable">--install</span> skywalking skywalking/skywalking <span class="token parameter variable">-n</span> istio-system <span class="token parameter variable">-f</span> my_values.yaml

<span class="token function">git</span> clone https://github.com/apache/skywalking-kubernetes
<span class="token builtin class-name">cd</span> skywalking-kubernetes
helm repo <span class="token function">add</span> elastic https://helm.elastic.co
helm dep up chart/skywalking

<span class="token builtin class-name">cd</span> chart/skywalking
helm upgrade <span class="token parameter variable">--install</span> skywalking <span class="token builtin class-name">.</span> <span class="token parameter variable">-n</span> istio-system <span class="token parameter variable">-f</span> my_values.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none"># my_values.yaml
fullnameOverride: skywalking

oap:
  image:
    tag: 8.8.1-es7
    # repository: xxx
  storageType: elasticsearch
  env:
    SW_ENVOY_METRIC_ALS_HTTP_ANALYSIS: k8s-mesh
    SW_ENVOY_METRIC_ALS_TCP_ANALYSIS: k8s-mesh
    # SW_STORAGE_ES_CLUSTER_NODES: &quot;xxx:9200,xxx:9200,xxx:9200&quot;

ui:
  image:
    tag: 8.8.1
    # repository: 

envoy:
  als:
    enabled: true

elasticsearch:
  persistence:
    enabled: true
  volumeClaimTemplate:
    storageClassName: prometheus-data-db<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="部署准入控制器-SWKAC"><a href="#部署准入控制器-SWKAC" class="headerlink" title="部署准入控制器 - SWKAC"></a>部署准入控制器 - SWKAC</h2><p><a href="https://github.com/lipangeng/Skywalking-Injection">https://github.com/lipangeng/Skywalking-Injection</a></p>
<h2 id="agent-config"><a href="#agent-config" class="headerlink" title="agent config"></a>agent config</h2><p><a href="https://skywalking.apache.org/docs/main/v8.6.0/en/setup/service-agent/java-agent/readme/#table-of-agent-configuration-properties">https://skywalking.apache.org/docs/main/v8.6.0/en/setup/service-agent/java-agent/readme/#table-of-agent-configuration-properties</a></p>
]]></content>
      <categories>
        <category>微服务</category>
      </categories>
      <tags>
        <tag>APM</tag>
        <tag>skywalking</tag>
      </tags>
  </entry>
  <entry>
    <title>测试开发专题</title>
    <url>/posts/39920/</url>
    <content><![CDATA[<h2 id="测试开发目标"><a href="#测试开发目标" class="headerlink" title="测试开发目标"></a>测试开发目标</h2><span id="more"></span>
<h3 id="过程一体化"><a href="#过程一体化" class="headerlink" title="过程一体化"></a>过程一体化</h3><p>使用统一的平台完成测试设计、脚本开发和调试、执行调度、统计分析、报告展示等活动；<br>同其他 DevOps、CI/CD 工具实现无缝对接，作为整个研发系统的一个有机组成部分而发挥效用。</p>
<h3 id="资产集中化"><a href="#资产集中化" class="headerlink" title="资产集中化"></a>资产集中化</h3><p>将测试脚本、测试数据，AI 测试的语音、说法和图片等资产进行集中化管理，在组织层面实现共享；<br>将测试设备硬件接入云端，实现集中管理、远程访问；采用虚拟化技术构建不同类型、版本的操作系统和浏览器，并做到按需启动和销毁，在组织层面实现共享。</p>
<h3 id="测试服务化"><a href="#测试服务化" class="headerlink" title="测试服务化"></a>测试服务化</h3><p>提供方便的测试管理页面或接口，含测试人员外的任何人、在任何时候，可方便地发起指定范围和环境上的一次测试；<br>测试完成后，及时生成、分发测试结果和分析报告，完成度量和评估，为后续工作安排和决策提供依据。</p>
<p>测试人员开发技能：编程语言、计算机系统、网络和数据库等；<br>软件测试高级技术：自动化、性能、接口测试工具使用和开发；<br>软件研发工具链： DevOps、CI/CD 持续集成和部署等工具链。</p>
<p>摘自：</p>
<blockquote>
<p>文章列表：<a href="http://testerhome.com/chenqi">http://testerhome.com/chenqi</a><br>测试管理-测试开发专题-开篇：<a href="http://testerhome.com/topics/30247">http://testerhome.com/topics/30247</a></p>
</blockquote>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title>流量回放</title>
    <url>/posts/18780/</url>
    <content><![CDATA[<p><a href="https://testerhome.com/topics/20024">阿里录制回放平台 (Doom) 试用记录 (未完待续)</a></p>
<p><a href="https://help.aliyun.com/document_detail/62849.htm">双引擎接入使用文档</a></p>
<p><a href="https://doom.rdc.aliyun.com/">Doom地址</a></p>
<p><a href="https://lark.alipay.com/doomgroup/docfodoom/vwo5yc">Doom插件文档</a></p>
<span id="more"></span>

<p><a href="https://www.bilibili.com/read/cv14797085/">流量回放-众安效能平台实践</a></p>
]]></content>
      <categories>
        <category>测试</category>
        <category>流量回放</category>
      </categories>
      <tags>
        <tag>jvm-sandbox-repeater</tag>
        <tag>Doom</tag>
      </tags>
  </entry>
  <entry>
    <title>测试的职业发展</title>
    <url>/posts/43546/</url>
    <content><![CDATA[<h2 id="优秀的业务测试同学具备哪些能力"><a href="#优秀的业务测试同学具备哪些能力" class="headerlink" title="优秀的业务测试同学具备哪些能力"></a>优秀的业务测试同学具备哪些能力</h2><span id="more"></span>
<p>阿里内部有一篇很高阅读量的文章《业务型测试的职业发展和晋升路径思考》，这边截取一些观点放出来给大家参考<br>优秀的业务型测试同学要</p>
<ol>
<li>有复杂系统的快速认知能力</li>
<li>有针对复杂系统以及项目实施过程提出可测性改造的架构能力</li>
<li>有敏锐的识别和挖掘技术机会能力</li>
<li>有快速质量保证体系整合的质量解决方案交付能力</li>
<li>有结果导向的项目管理的能力</li>
</ol>
<p>再结合内部测试开发的晋升标准维度（不展开细说）</p>
<ol>
<li>影响力</li>
<li>创新力</li>
<li>项目管理</li>
<li>业务敏锐度</li>
<li>基础测试能力</li>
<li>开发能力</li>
<li>数据能力</li>
</ol>
<blockquote>
<p><a href="https://testerhome.com/topics/33175">https://testerhome.com/topics/33175</a></p>
</blockquote>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title>混沌工程</title>
    <url>/posts/65306/</url>
    <content><![CDATA[<h2 id="混沌工程"><a href="#混沌工程" class="headerlink" title="混沌工程"></a>混沌工程</h2><p><a href="https://github.com/dastergon/awesome-chaos-engineering">awesome-chaos-engineering</a></p>
<p><a href="https://principlesofchaos.org/zh/">混沌工程原则</a></p>
<h2 id="混沌工程工具"><a href="#混沌工程工具" class="headerlink" title="混沌工程工具"></a>混沌工程工具</h2><h3 id="ChaosBlade-一个简单易用且功能强大的混沌实验实施工具"><a href="#ChaosBlade-一个简单易用且功能强大的混沌实验实施工具" class="headerlink" title="ChaosBlade: 一个简单易用且功能强大的混沌实验实施工具"></a>ChaosBlade: 一个简单易用且功能强大的混沌实验实施工具</h3><p><a href="https://github.com/chaosblade-io/awesome-chaosblade">ChaosBlade实践</a></p>
<p><a href="https://chaosblade-io.gitbook.io/chaosblade-help-zh-cn/">中文使用文档</a></p>
<p><a href="https://github.com/chaosblade-io/chaosblade">ChaosBlade</a></p>
<span id="more"></span>
<h4 id="Chaosblade-box：场景丰富的混沌工程平台"><a href="#Chaosblade-box：场景丰富的混沌工程平台" class="headerlink" title="Chaosblade-box：场景丰富的混沌工程平台"></a>Chaosblade-box：场景丰富的混沌工程平台</h4><p><a href="https://github.com/chaosblade-io/chaosblade-box">Chaosblade-box</a></p>
<h3 id="Chaos-Mesh：云原生混沌工程平台，可在-Kubernetes-环境中编排混沌"><a href="#Chaos-Mesh：云原生混沌工程平台，可在-Kubernetes-环境中编排混沌" class="headerlink" title="Chaos Mesh：云原生混沌工程平台，可在 Kubernetes 环境中编排混沌"></a>Chaos Mesh：云原生混沌工程平台，可在 Kubernetes 环境中编排混沌</h3><p><a href="https://github.com/chaos-mesh/chaos-mesh">Chaos Mesh</a></p>
<p><a href="https://chaos-mesh.org/zh/docs/">Chaos Mesh Docs</a></p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title>镜像源更换速查</title>
    <url>/posts/49091/</url>
    <content><![CDATA[<h2 id="中科大"><a href="#中科大" class="headerlink" title="中科大"></a>中科大</h2><p><a href="http://mirrors.ustc.edu.cn/help/">http://mirrors.ustc.edu.cn/help/</a></p>
<h2 id="阿里云官方镜像站"><a href="#阿里云官方镜像站" class="headerlink" title="阿里云官方镜像站"></a>阿里云官方镜像站</h2><p><a href="https://developer.aliyun.com/mirror/">https://developer.aliyun.com/mirror/</a></p>
<h2 id="清华大学开源软件镜像站"><a href="#清华大学开源软件镜像站" class="headerlink" title="清华大学开源软件镜像站"></a>清华大学开源软件镜像站</h2><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help">https://mirrors.tuna.tsinghua.edu.cn/help</a></p>
<span id="more"></span>

<h2 id="网易开源镜像站"><a href="#网易开源镜像站" class="headerlink" title="网易开源镜像站"></a>网易开源镜像站</h2><p><a href="http://mirrors.163.com/">http://mirrors.163.com/</a></p>
<h2 id="腾讯软件源"><a href="#腾讯软件源" class="headerlink" title="腾讯软件源"></a>腾讯软件源</h2><p><a href="https://mirrors.cloud.tencent.com/">https://mirrors.cloud.tencent.com/</a></p>
<h2 id="CentOS-7"><a href="#CentOS-7" class="headerlink" title="CentOS 7"></a>CentOS 7</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">'s|^mirrorlist=|#mirrorlist=|g'</span> <span class="token punctuation">\</span>
         <span class="token parameter variable">-e</span> <span class="token string">'s|^#baseurl=http://mirror.centos.org/centos|baseurl=https://mirrors.ustc.edu.cn/centos|g'</span> <span class="token punctuation">\</span>
         <span class="token parameter variable">-i.bak</span> <span class="token punctuation">\</span>
         /etc/yum.repos.d/CentOS-Base.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="CentOS-8"><a href="#CentOS-8" class="headerlink" title="CentOS 8"></a>CentOS 8</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">'s|^mirrorlist=|#mirrorlist=|g'</span> <span class="token punctuation">\</span>
         <span class="token parameter variable">-e</span> <span class="token string">'s|^#baseurl=http://mirror.centos.org/$contentdir|baseurl=https://mirrors.ustc.edu.cn/centos|g'</span> <span class="token punctuation">\</span>
         <span class="token parameter variable">-i.bak</span> <span class="token punctuation">\</span>
         /etc/yum.repos.d/CentOS-Linux-AppStream.repo <span class="token punctuation">\</span>
         /etc/yum.repos.d/CentOS-Linux-BaseOS.repo <span class="token punctuation">\</span>
         /etc/yum.repos.d/CentOS-Linux-Extras.repo <span class="token punctuation">\</span>
         /etc/yum.repos.d/CentOS-Linux-PowerTools.repo <span class="token punctuation">\</span>
         /etc/yum.repos.d/CentOS-Linux-Plus.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/deb.debian.org/mirrors.ustc.edu.cn/g'</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="PyPI"><a href="#PyPI" class="headerlink" title="PyPI"></a>PyPI</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip config <span class="token builtin class-name">set</span> global.index-url https://mirrors.ustc.edu.cn/pypi/web/simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda config <span class="token parameter variable">--add</span> channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/
conda config <span class="token parameter variable">--add</span> channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/
conda config <span class="token parameter variable">--set</span> show_channel_urls <span class="token function">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h2 id="Alpine-Linux"><a href="#Alpine-Linux" class="headerlink" title="Alpine Linux"></a>Alpine Linux</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g'</span> /etc/apk/repositories

<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g'</span> /etc/apk/repositories<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h2 id="Yarn"><a href="#Yarn" class="headerlink" title="Yarn"></a>Yarn</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org <span class="token parameter variable">--global</span>
<span class="token function">yarn</span> config <span class="token builtin class-name">set</span> disturl https://npm.taobao.org/dist <span class="token parameter variable">--global</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>软件配置</category>
      </categories>
      <tags>
        <tag>mirror</tag>
      </tags>
  </entry>
</search>
